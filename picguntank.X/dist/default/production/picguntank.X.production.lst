

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 25 22:45:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1508 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011D                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  018E                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0197                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019E                     	;# 
   126  019F                     	;# 
   127  020C                     	;# 
   128  020D                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  0394                     	;# 
   148  0395                     	;# 
   149  0396                     	;# 
   150  0498                     	;# 
   151  0498                     	;# 
   152  0499                     	;# 
   153  049A                     	;# 
   154  049B                     	;# 
   155  049B                     	;# 
   156  049C                     	;# 
   157  049D                     	;# 
   158  049E                     	;# 
   159  049F                     	;# 
   160  0611                     	;# 
   161  0612                     	;# 
   162  0613                     	;# 
   163  0613                     	;# 
   164  0614                     	;# 
   165  0615                     	;# 
   166  0616                     	;# 
   167  0616                     	;# 
   168  0617                     	;# 
   169  0618                     	;# 
   170  0619                     	;# 
   171  0619                     	;# 
   172  061A                     	;# 
   173  061B                     	;# 
   174  061C                     	;# 
   175  061C                     	;# 
   176  0691                     	;# 
   177  0692                     	;# 
   178  0693                     	;# 
   179  0694                     	;# 
   180  0695                     	;# 
   181  0F0F                     	;# 
   182  0F10                     	;# 
   183  0F11                     	;# 
   184  0F12                     	;# 
   185  0F13                     	;# 
   186  0F14                     	;# 
   187  0F15                     	;# 
   188  0F16                     	;# 
   189  0F17                     	;# 
   190  0F18                     	;# 
   191  0F19                     	;# 
   192  0F1A                     	;# 
   193  0F1B                     	;# 
   194  0F1C                     	;# 
   195  0F1D                     	;# 
   196  0F1E                     	;# 
   197  0F1F                     	;# 
   198  0F20                     	;# 
   199  0F21                     	;# 
   200  0F22                     	;# 
   201  0F23                     	;# 
   202  0F24                     	;# 
   203  0F25                     	;# 
   204  0F26                     	;# 
   205  0F27                     	;# 
   206  0F28                     	;# 
   207  0F29                     	;# 
   208  0F2A                     	;# 
   209  0F2B                     	;# 
   210  0F2C                     	;# 
   211  0F2D                     	;# 
   212  0F2E                     	;# 
   213  0F2F                     	;# 
   214  0F8C                     	;# 
   215  0F8D                     	;# 
   216  0F91                     	;# 
   217  0F95                     	;# 
   218  0F96                     	;# 
   219  0F97                     	;# 
   220  0F9C                     	;# 
   221  0F9D                     	;# 
   222  0F9E                     	;# 
   223  0FE3                     	;# 
   224  0FE4                     	;# 
   225  0FE5                     	;# 
   226  0FE6                     	;# 
   227  0FE7                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEB                     	;# 
   232  0FED                     	;# 
   233  0FEE                     	;# 
   234  0FEF                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011D                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  018E                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0194                     	;# 
   301  0195                     	;# 
   302  0196                     	;# 
   303  0197                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020C                     	;# 
   313  020D                     	;# 
   314  0211                     	;# 
   315  0211                     	;# 
   316  0212                     	;# 
   317  0212                     	;# 
   318  0213                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0216                     	;# 
   327  0217                     	;# 
   328  0217                     	;# 
   329  0391                     	;# 
   330  0392                     	;# 
   331  0393                     	;# 
   332  0394                     	;# 
   333  0395                     	;# 
   334  0396                     	;# 
   335  0498                     	;# 
   336  0498                     	;# 
   337  0499                     	;# 
   338  049A                     	;# 
   339  049B                     	;# 
   340  049B                     	;# 
   341  049C                     	;# 
   342  049D                     	;# 
   343  049E                     	;# 
   344  049F                     	;# 
   345  0611                     	;# 
   346  0612                     	;# 
   347  0613                     	;# 
   348  0613                     	;# 
   349  0614                     	;# 
   350  0615                     	;# 
   351  0616                     	;# 
   352  0616                     	;# 
   353  0617                     	;# 
   354  0618                     	;# 
   355  0619                     	;# 
   356  0619                     	;# 
   357  061A                     	;# 
   358  061B                     	;# 
   359  061C                     	;# 
   360  061C                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0F0F                     	;# 
   367  0F10                     	;# 
   368  0F11                     	;# 
   369  0F12                     	;# 
   370  0F13                     	;# 
   371  0F14                     	;# 
   372  0F15                     	;# 
   373  0F16                     	;# 
   374  0F17                     	;# 
   375  0F18                     	;# 
   376  0F19                     	;# 
   377  0F1A                     	;# 
   378  0F1B                     	;# 
   379  0F1C                     	;# 
   380  0F1D                     	;# 
   381  0F1E                     	;# 
   382  0F1F                     	;# 
   383  0F20                     	;# 
   384  0F21                     	;# 
   385  0F22                     	;# 
   386  0F23                     	;# 
   387  0F24                     	;# 
   388  0F25                     	;# 
   389  0F26                     	;# 
   390  0F27                     	;# 
   391  0F28                     	;# 
   392  0F29                     	;# 
   393  0F2A                     	;# 
   394  0F2B                     	;# 
   395  0F2C                     	;# 
   396  0F2D                     	;# 
   397  0F2E                     	;# 
   398  0F2F                     	;# 
   399  0F8C                     	;# 
   400  0F8D                     	;# 
   401  0F91                     	;# 
   402  0F95                     	;# 
   403  0F96                     	;# 
   404  0F97                     	;# 
   405  0F9C                     	;# 
   406  0F9D                     	;# 
   407  0F9E                     	;# 
   408  0FE3                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0099                     	;# 
   457  009A                     	;# 
   458  009B                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  0111                     	;# 
   468  0112                     	;# 
   469  0113                     	;# 
   470  0114                     	;# 
   471  0115                     	;# 
   472  0116                     	;# 
   473  0117                     	;# 
   474  0118                     	;# 
   475  0119                     	;# 
   476  011D                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  018E                     	;# 
   480  0191                     	;# 
   481  0191                     	;# 
   482  0192                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0197                     	;# 
   489  0199                     	;# 
   490  019A                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0391                     	;# 
   515  0392                     	;# 
   516  0393                     	;# 
   517  0394                     	;# 
   518  0395                     	;# 
   519  0396                     	;# 
   520  0498                     	;# 
   521  0498                     	;# 
   522  0499                     	;# 
   523  049A                     	;# 
   524  049B                     	;# 
   525  049B                     	;# 
   526  049C                     	;# 
   527  049D                     	;# 
   528  049E                     	;# 
   529  049F                     	;# 
   530  0611                     	;# 
   531  0612                     	;# 
   532  0613                     	;# 
   533  0613                     	;# 
   534  0614                     	;# 
   535  0615                     	;# 
   536  0616                     	;# 
   537  0616                     	;# 
   538  0617                     	;# 
   539  0618                     	;# 
   540  0619                     	;# 
   541  0619                     	;# 
   542  061A                     	;# 
   543  061B                     	;# 
   544  061C                     	;# 
   545  061C                     	;# 
   546  0691                     	;# 
   547  0692                     	;# 
   548  0693                     	;# 
   549  0694                     	;# 
   550  0695                     	;# 
   551  0F0F                     	;# 
   552  0F10                     	;# 
   553  0F11                     	;# 
   554  0F12                     	;# 
   555  0F13                     	;# 
   556  0F14                     	;# 
   557  0F15                     	;# 
   558  0F16                     	;# 
   559  0F17                     	;# 
   560  0F18                     	;# 
   561  0F19                     	;# 
   562  0F1A                     	;# 
   563  0F1B                     	;# 
   564  0F1C                     	;# 
   565  0F1D                     	;# 
   566  0F1E                     	;# 
   567  0F1F                     	;# 
   568  0F20                     	;# 
   569  0F21                     	;# 
   570  0F22                     	;# 
   571  0F23                     	;# 
   572  0F24                     	;# 
   573  0F25                     	;# 
   574  0F26                     	;# 
   575  0F27                     	;# 
   576  0F28                     	;# 
   577  0F29                     	;# 
   578  0F2A                     	;# 
   579  0F2B                     	;# 
   580  0F2C                     	;# 
   581  0F2D                     	;# 
   582  0F2E                     	;# 
   583  0F2F                     	;# 
   584  0F8C                     	;# 
   585  0F8D                     	;# 
   586  0F91                     	;# 
   587  0F95                     	;# 
   588  0F96                     	;# 
   589  0F97                     	;# 
   590  0F9C                     	;# 
   591  0F9D                     	;# 
   592  0F9E                     	;# 
   593  0FE3                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  000E                     _PORTCbits	set	14
   606  000D                     _PORTBbits	set	13
   607  001B                     _PR2	set	27
   608  001C                     _T2CON	set	28
   609  0095                     _OPTION_REGbits	set	149
   610  0097                     _WDTCON	set	151
   611  0099                     _OSCCON	set	153
   612  008E                     _TRISC	set	142
   613  008D                     _TRISB	set	141
   614  008C                     _TRISA	set	140
   615  0099                     _OSCCONbits	set	153
   616  011D                     _APFCON	set	285
   617  010D                     _LATB	set	269
   618  0116                     _BORCON	set	278
   619  010E                     _LATCbits	set	270
   620  010C                     _LATAbits	set	268
   621  010C                     _LATA	set	268
   622  010E                     _LATC	set	270
   623  018E                     _ANSELC	set	398
   624  018D                     _ANSELB	set	397
   625  018C                     _ANSELA	set	396
   626  020C                     _WPUA	set	524
   627  020D                     _WPUB	set	525
   628  061A                     _PWM4DCL	set	1562
   629  061B                     _PWM4DCH	set	1563
   630  061C                     _PWM4CON	set	1564
   631  0617                     _PWM3DCL	set	1559
   632  0618                     _PWM3DCH	set	1560
   633  0619                     _PWM3CON	set	1561
   634  0614                     _PWM2DCL	set	1556
   635  0615                     _PWM2DCH	set	1557
   636  0616                     _PWM2CON	set	1558
   637  0611                     _PWM1DCL	set	1553
   638  0612                     _PWM1DCH	set	1554
   639  0613                     _PWM1CON	set	1555
   640                           
   641                           ; #config settings
   642  0000                     
   643                           	psect	cinit
   644  07F9                     start_initialization:	
   645  07F9                     __initialization:	
   646                           
   647                           ; Clear objects allocated to COMMON
   648  07F9  01F0               	clrf	__pbssCOMMON& (0+127)
   649  07FA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   650  07FB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   651  07FC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   652  07FD                     end_of_initialization:	
   653                           ;End of C runtime variable initialization code
   654                           
   655  07FD                     __end_of__initialization:	
   656  07FD  0020               	movlb	0
   657  07FE  3187  2F2A         	ljmp	_main	;jump to C main() function
   658                           
   659                           	psect	bssCOMMON
   660  0070                     __pbssCOMMON:	
   661  0070                     _Motor2:	
   662  0070                     	ds	2
   663  0072                     _Motor1:	
   664  0072                     	ds	2
   665                           
   666                           	psect	cstackCOMMON
   667  0074                     __pcstackCOMMON:	
   668  0074                     ?_SYSTEM_Initialize:	
   669  0074                     ??_SYSTEM_Initialize:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0074                     ?_M1Drive:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0074                     ??_M1Drive:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0074                     ?_M2Drive:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0074                     ??_M2Drive:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0074                     ?_PIN_MANAGER_Initialize:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0074                     ??_PIN_MANAGER_Initialize:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0074                     ?_OSCILLATOR_Initialize:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0074                     ??_OSCILLATOR_Initialize:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0074                     ?_WDT_Initialize:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0074                     ??_WDT_Initialize:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0074                     ?_main:	
   703                           ; 1 bytes @ 0x0
   704                           
   705                           
   706                           ; 1 bytes @ 0x0
   707  0074                     	ds	1
   708  0075                     ??_main:	
   709                           
   710                           ; 1 bytes @ 0x1
   711  0075                     	ds	2
   712                           
   713                           	psect	maintext
   714  072A                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 67 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B1F/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   734 ;;      Params:         0       0       0       0
   735 ;;      Locals:         0       0       0       0
   736 ;;      Temps:          2       0       0       0
   737 ;;      Totals:         2       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		_M1Drive
   742 ;;		_M2Drive
   743 ;;		_SYSTEM_Initialize
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _main
   751  072A                     _main:	
   752  072A                     l753:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;main.c: 70:     SYSTEM_Initialize();
   758  072A  3186  26AB  3187   	fcall	_SYSTEM_Initialize
   759  072D                     l755:	
   760                           
   761                           ;main.c: 73:     OSCCONbits.IRCF = 15;
   762  072D  3078               	movlw	120
   763  072E  0021               	movlb	1	; select bank1
   764  072F  0499               	iorwf	25,f	;volatile
   765  0730                     l757:	
   766                           
   767                           ;main.c: 76:     LATC = 0b00000101;
   768  0730  3005               	movlw	5
   769  0731  0022               	movlb	2	; select bank2
   770  0732  008E               	movwf	14	;volatile
   771  0733                     l759:	
   772                           
   773                           ;main.c: 77:     LATA = 0b00110000;
   774  0733  3030               	movlw	48
   775  0734  008C               	movwf	12	;volatile
   776  0735                     l761:	
   777                           
   778                           ;main.c: 78:     ANSELA = 0;
   779  0735  0023               	movlb	3	; select bank3
   780  0736  018C               	clrf	12	;volatile
   781  0737                     l763:	
   782                           
   783                           ;main.c: 79:     ANSELB = 0;
   784  0737  018D               	clrf	13	;volatile
   785  0738                     l765:	
   786                           
   787                           ;main.c: 80:     ANSELC = 0;
   788  0738  018E               	clrf	14	;volatile
   789  0739                     l767:	
   790                           
   791                           ;main.c: 81:     TRISA = 0x08;
   792  0739  3008               	movlw	8
   793  073A  0021               	movlb	1	; select bank1
   794  073B  008C               	movwf	12	;volatile
   795  073C                     l769:	
   796                           
   797                           ;main.c: 82:     TRISB = 0xF0;
   798  073C  30F0               	movlw	240
   799  073D  008D               	movwf	13	;volatile
   800  073E                     l771:	
   801                           
   802                           ;main.c: 83:     TRISC = 0xC0;
   803  073E  30C0               	movlw	192
   804  073F  008E               	movwf	14	;volatile
   805  0740                     l773:	
   806                           
   807                           ;main.c: 86:     T2CON = 0x04;
   808  0740  3004               	movlw	4
   809  0741  0020               	movlb	0	; select bank0
   810  0742  009C               	movwf	28	;volatile
   811  0743                     l775:	
   812                           
   813                           ;main.c: 87:     PR2 = 0xFF;
   814  0743  30FF               	movlw	255
   815  0744  009B               	movwf	27	;volatile
   816  0745                     l777:	
   817                           
   818                           ;main.c: 90:     PWM1CON = 0xC0;
   819  0745  30C0               	movlw	192
   820  0746  002C               	movlb	12	; select bank12
   821  0747  0093               	movwf	19	;volatile
   822  0748                     l779:	
   823                           
   824                           ;main.c: 91:     PWM1DCH = 0;
   825  0748  0192               	clrf	18	;volatile
   826  0749                     l781:	
   827                           
   828                           ;main.c: 92:     PWM1DCL = 0;
   829  0749  0191               	clrf	17	;volatile
   830  074A                     l783:	
   831                           
   832                           ;main.c: 93:     PWM2CON = 0xC0;
   833  074A  30C0               	movlw	192
   834  074B  0096               	movwf	22	;volatile
   835  074C                     l785:	
   836                           
   837                           ;main.c: 94:     PWM2DCH = 0;
   838  074C  0195               	clrf	21	;volatile
   839  074D                     l787:	
   840                           
   841                           ;main.c: 95:     PWM2DCL = 0;
   842  074D  0194               	clrf	20	;volatile
   843  074E                     l789:	
   844                           
   845                           ;main.c: 96:     PWM3CON = 0xC0;
   846  074E  30C0               	movlw	192
   847  074F  0099               	movwf	25	;volatile
   848  0750                     l791:	
   849                           
   850                           ;main.c: 97:     PWM3DCH = 0;
   851  0750  0198               	clrf	24	;volatile
   852  0751                     l793:	
   853                           
   854                           ;main.c: 98:     PWM3DCL = 0;
   855  0751  0197               	clrf	23	;volatile
   856  0752                     l795:	
   857                           
   858                           ;main.c: 99:     PWM4CON = 0xC0;
   859  0752  30C0               	movlw	192
   860  0753  009C               	movwf	28	;volatile
   861  0754                     l797:	
   862                           
   863                           ;main.c: 100:     PWM4DCH = 0;
   864  0754  019B               	clrf	27	;volatile
   865  0755                     l799:	
   866                           
   867                           ;main.c: 101:     PWM4DCL = 0;
   868  0755  019A               	clrf	26	;volatile
   869  0756                     l801:	
   870                           
   871                           ;main.c: 104:     Motor1 = 0;
   872  0756  01F2               	clrf	_Motor1
   873  0757  01F3               	clrf	_Motor1+1
   874  0758                     l803:	
   875                           
   876                           ;main.c: 105:     Motor2 = 0;
   877  0758  01F0               	clrf	_Motor2
   878  0759  01F1               	clrf	_Motor2+1
   879  075A                     l805:	
   880                           
   881                           ;main.c: 108:         if (PORTBbits.RB7 == 1) {
   882  075A  0020               	movlb	0	; select bank0
   883  075B  1F8D               	btfss	13,7	;volatile
   884  075C  2F5E               	goto	u71
   885  075D  2F5F               	goto	u70
   886  075E                     u71:	
   887  075E  2FE0               	goto	l855
   888  075F                     u70:	
   889  075F                     l807:	
   890                           
   891                           ;main.c: 110:             if (PORTBbits.RB4 == 1) {
   892  075F  1E0D               	btfss	13,4	;volatile
   893  0760  2F62               	goto	u81
   894  0761  2F63               	goto	u80
   895  0762                     u81:	
   896  0762  2F74               	goto	l813
   897  0763                     u80:	
   898  0763                     l809:	
   899                           
   900                           ;main.c: 111:                 if (Motor1 < 250) {
   901  0763  0873               	movf	_Motor1+1,w
   902  0764  3A80               	xorlw	128
   903  0765  00F5               	movwf	??_main
   904  0766  3080               	movlw	128
   905  0767  0275               	subwf	??_main,w
   906  0768  1D03               	skipz
   907  0769  2F6C               	goto	u95
   908  076A  30FA               	movlw	250
   909  076B  0272               	subwf	_Motor1,w
   910  076C                     u95:	
   911  076C  1803               	skipnc
   912  076D  2F6F               	goto	u91
   913  076E  2F70               	goto	u90
   914  076F                     u91:	
   915  076F  2F74               	goto	l813
   916  0770                     u90:	
   917  0770                     l811:	
   918                           
   919                           ;main.c: 112:                     Motor1 += 50;
   920  0770  3032               	movlw	50
   921  0771  07F2               	addwf	_Motor1,f
   922  0772  3000               	movlw	0
   923  0773  3DF3               	addwfc	_Motor1+1,f
   924  0774                     l813:	
   925                           
   926                           ;main.c: 115:             if (PORTBbits.RB5 == 1) {
   927  0774  0020               	movlb	0	; select bank0
   928  0775  1E8D               	btfss	13,5	;volatile
   929  0776  2F78               	goto	u101
   930  0777  2F79               	goto	u100
   931  0778                     u101:	
   932  0778  2F8A               	goto	l819
   933  0779                     u100:	
   934  0779                     l815:	
   935                           
   936                           ;main.c: 116:                 if (Motor1 > -250) {
   937  0779  0873               	movf	_Motor1+1,w
   938  077A  3A80               	xorlw	128
   939  077B  00F5               	movwf	??_main
   940  077C  307F               	movlw	127
   941  077D  0275               	subwf	??_main,w
   942  077E  1D03               	skipz
   943  077F  2F82               	goto	u115
   944  0780  3007               	movlw	7
   945  0781  0272               	subwf	_Motor1,w
   946  0782                     u115:	
   947  0782  1C03               	skipc
   948  0783  2F85               	goto	u111
   949  0784  2F86               	goto	u110
   950  0785                     u111:	
   951  0785  2F8A               	goto	l819
   952  0786                     u110:	
   953  0786                     l817:	
   954                           
   955                           ;main.c: 117:                     Motor1 -= 50;
   956  0786  30CE               	movlw	206
   957  0787  07F2               	addwf	_Motor1,f
   958  0788  30FF               	movlw	255
   959  0789  3DF3               	addwfc	_Motor1+1,f
   960  078A                     l819:	
   961                           
   962                           ;main.c: 120:             if (PORTBbits.RB4 == 0 && PORTBbits.RB5 == 0) {
   963  078A  0020               	movlb	0	; select bank0
   964  078B  1A0D               	btfsc	13,4	;volatile
   965  078C  2F8E               	goto	u121
   966  078D  2F8F               	goto	u120
   967  078E                     u121:	
   968  078E  2F95               	goto	l825
   969  078F                     u120:	
   970  078F                     l821:	
   971  078F  1A8D               	btfsc	13,5	;volatile
   972  0790  2F92               	goto	u131
   973  0791  2F93               	goto	u130
   974  0792                     u131:	
   975  0792  2F95               	goto	l825
   976  0793                     u130:	
   977  0793                     l823:	
   978                           
   979                           ;main.c: 121:                 Motor1 = 0;
   980  0793  01F2               	clrf	_Motor1
   981  0794  01F3               	clrf	_Motor1+1
   982  0795                     l825:	
   983                           
   984                           ;main.c: 123:             if (PORTBbits.RB4 == 1 && PORTBbits.RB5 == 1) {
   985  0795  1E0D               	btfss	13,4	;volatile
   986  0796  2F98               	goto	u141
   987  0797  2F99               	goto	u140
   988  0798                     u141:	
   989  0798  2F9F               	goto	l831
   990  0799                     u140:	
   991  0799                     l827:	
   992  0799  1E8D               	btfss	13,5	;volatile
   993  079A  2F9C               	goto	u151
   994  079B  2F9D               	goto	u150
   995  079C                     u151:	
   996  079C  2F9F               	goto	l831
   997  079D                     u150:	
   998  079D                     l829:	
   999                           
  1000                           ;main.c: 124:                 Motor1 = 0;
  1001  079D  01F2               	clrf	_Motor1
  1002  079E  01F3               	clrf	_Motor1+1
  1003  079F                     l831:	
  1004                           
  1005                           ;main.c: 126:             if (PORTBbits.RB6 == 1) {
  1006  079F  1F0D               	btfss	13,6	;volatile
  1007  07A0  2FA2               	goto	u161
  1008  07A1  2FA3               	goto	u160
  1009  07A2                     u161:	
  1010  07A2  2FB4               	goto	l837
  1011  07A3                     u160:	
  1012  07A3                     l833:	
  1013                           
  1014                           ;main.c: 127:                 if (Motor2 < 250) {
  1015  07A3  0871               	movf	_Motor2+1,w
  1016  07A4  3A80               	xorlw	128
  1017  07A5  00F5               	movwf	??_main
  1018  07A6  3080               	movlw	128
  1019  07A7  0275               	subwf	??_main,w
  1020  07A8  1D03               	skipz
  1021  07A9  2FAC               	goto	u175
  1022  07AA  30FA               	movlw	250
  1023  07AB  0270               	subwf	_Motor2,w
  1024  07AC                     u175:	
  1025  07AC  1803               	skipnc
  1026  07AD  2FAF               	goto	u171
  1027  07AE  2FB0               	goto	u170
  1028  07AF                     u171:	
  1029  07AF  2FB4               	goto	l837
  1030  07B0                     u170:	
  1031  07B0                     l835:	
  1032                           
  1033                           ;main.c: 128:                     Motor2 += 50;
  1034  07B0  3032               	movlw	50
  1035  07B1  07F0               	addwf	_Motor2,f
  1036  07B2  3000               	movlw	0
  1037  07B3  3DF1               	addwfc	_Motor2+1,f
  1038  07B4                     l837:	
  1039                           
  1040                           ;main.c: 131:             if (PORTCbits.RC6 == 1) {
  1041  07B4  0020               	movlb	0	; select bank0
  1042  07B5  1F0E               	btfss	14,6	;volatile
  1043  07B6  2FB8               	goto	u181
  1044  07B7  2FB9               	goto	u180
  1045  07B8                     u181:	
  1046  07B8  2FCA               	goto	l843
  1047  07B9                     u180:	
  1048  07B9                     l839:	
  1049                           
  1050                           ;main.c: 132:                 if (Motor2 > -250) {
  1051  07B9  0871               	movf	_Motor2+1,w
  1052  07BA  3A80               	xorlw	128
  1053  07BB  00F5               	movwf	??_main
  1054  07BC  307F               	movlw	127
  1055  07BD  0275               	subwf	??_main,w
  1056  07BE  1D03               	skipz
  1057  07BF  2FC2               	goto	u195
  1058  07C0  3007               	movlw	7
  1059  07C1  0270               	subwf	_Motor2,w
  1060  07C2                     u195:	
  1061  07C2  1C03               	skipc
  1062  07C3  2FC5               	goto	u191
  1063  07C4  2FC6               	goto	u190
  1064  07C5                     u191:	
  1065  07C5  2FCA               	goto	l843
  1066  07C6                     u190:	
  1067  07C6                     l841:	
  1068                           
  1069                           ;main.c: 133:                     Motor2 -= 50;
  1070  07C6  30CE               	movlw	206
  1071  07C7  07F0               	addwf	_Motor2,f
  1072  07C8  30FF               	movlw	255
  1073  07C9  3DF1               	addwfc	_Motor2+1,f
  1074  07CA                     l843:	
  1075                           
  1076                           ;main.c: 136:             if (PORTBbits.RB6 == 0 && PORTCbits.RC6 == 0) {
  1077  07CA  0020               	movlb	0	; select bank0
  1078  07CB  1B0D               	btfsc	13,6	;volatile
  1079  07CC  2FCE               	goto	u201
  1080  07CD  2FCF               	goto	u200
  1081  07CE                     u201:	
  1082  07CE  2FD5               	goto	l849
  1083  07CF                     u200:	
  1084  07CF                     l845:	
  1085  07CF  1B0E               	btfsc	14,6	;volatile
  1086  07D0  2FD2               	goto	u211
  1087  07D1  2FD3               	goto	u210
  1088  07D2                     u211:	
  1089  07D2  2FD5               	goto	l849
  1090  07D3                     u210:	
  1091  07D3                     l847:	
  1092                           
  1093                           ;main.c: 137:                 Motor2 = 0;
  1094  07D3  01F0               	clrf	_Motor2
  1095  07D4  01F1               	clrf	_Motor2+1
  1096  07D5                     l849:	
  1097                           
  1098                           ;main.c: 139:             if (PORTBbits.RB6 == 1 && PORTCbits.RC6 == 1) {
  1099  07D5  1F0D               	btfss	13,6	;volatile
  1100  07D6  2FD8               	goto	u221
  1101  07D7  2FD9               	goto	u220
  1102  07D8                     u221:	
  1103  07D8  2FE4               	goto	l857
  1104  07D9                     u220:	
  1105  07D9                     l851:	
  1106  07D9  1F0E               	btfss	14,6	;volatile
  1107  07DA  2FDC               	goto	u231
  1108  07DB  2FDD               	goto	u230
  1109  07DC                     u231:	
  1110  07DC  2FE4               	goto	l857
  1111  07DD                     u230:	
  1112  07DD                     l853:	
  1113                           
  1114                           ;main.c: 140:                 Motor2 = 0;
  1115  07DD  01F0               	clrf	_Motor2
  1116  07DE  01F1               	clrf	_Motor2+1
  1117  07DF  2FE4               	goto	l857
  1118  07E0                     l855:	
  1119                           
  1120                           ;main.c: 143:             Motor1 = 0;
  1121  07E0  01F2               	clrf	_Motor1
  1122  07E1  01F3               	clrf	_Motor1+1
  1123                           
  1124                           ;main.c: 144:             Motor2 = 0;
  1125  07E2  01F0               	clrf	_Motor2
  1126  07E3  01F1               	clrf	_Motor2+1
  1127  07E4                     l857:	
  1128                           
  1129                           ;main.c: 148:         M1Drive();
  1130  07E4  3186  26CE  3187   	fcall	_M1Drive
  1131  07E7                     l859:	
  1132                           
  1133                           ;main.c: 149:         M2Drive();
  1134  07E7  3186  26FC  3187   	fcall	_M2Drive
  1135  07EA                     l861:	
  1136                           
  1137                           ;main.c: 150:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1138  07EA  3003               	movlw	3
  1139  07EB  00F6               	movwf	??_main+1
  1140  07EC  3008               	movlw	8
  1141  07ED  00F5               	movwf	??_main
  1142  07EE  3077               	movlw	119
  1143  07EF                     u247:	
  1144  07EF  0B89               	decfsz	9,f
  1145  07F0  2FEF               	goto	u247
  1146  07F1  0BF5               	decfsz	??_main,f
  1147  07F2  2FEF               	goto	u247
  1148  07F3  0BF6               	decfsz	??_main+1,f
  1149  07F4  2FEF               	goto	u247
  1150  07F5  0000               	nop
  1151  07F6  2F5A               	goto	l805
  1152  07F7  3180  2802         	ljmp	start
  1153  07F9                     __end_of_main:	
  1154                           
  1155                           	psect	text1
  1156  06AB                     __ptext1:	
  1157 ;; *************** function _SYSTEM_Initialize *****************
  1158 ;; Defined at:
  1159 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1173 ;;      Params:         0       0       0       0
  1174 ;;      Locals:         0       0       0       0
  1175 ;;      Temps:          0       0       0       0
  1176 ;;      Totals:         0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    1
  1180 ;; This function calls:
  1181 ;;		_OSCILLATOR_Initialize
  1182 ;;		_PIN_MANAGER_Initialize
  1183 ;;		_WDT_Initialize
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _SYSTEM_Initialize
  1191  06AB                     _SYSTEM_Initialize:	
  1192  06AB                     l709:	
  1193                           ;incstack = 0
  1194                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1195                           
  1196                           
  1197                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1198  06AB  3186  26B5  3186   	fcall	_PIN_MANAGER_Initialize
  1199                           
  1200                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1201  06AE  3186  26A5  3186   	fcall	_OSCILLATOR_Initialize
  1202  06B1                     l711:	
  1203                           
  1204                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1205  06B1  3186  26A2  3186   	fcall	_WDT_Initialize
  1206  06B4                     l119:	
  1207  06B4  0008               	return
  1208  06B5                     __end_of_SYSTEM_Initialize:	
  1209                           
  1210                           	psect	text2
  1211  06A2                     __ptext2:	
  1212 ;; *************** function _WDT_Initialize *****************
  1213 ;; Defined at:
  1214 ;;		line 66 in file "mcc_generated_files/mcc.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		status,2
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1228 ;;      Params:         0       0       0       0
  1229 ;;      Locals:         0       0       0       0
  1230 ;;      Temps:          0       0       0       0
  1231 ;;      Totals:         0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_SYSTEM_Initialize
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _WDT_Initialize
  1243  06A2                     _WDT_Initialize:	
  1244  06A2                     l707:	
  1245                           ;incstack = 0
  1246                           ; Regs used in _WDT_Initialize: [status,2]
  1247                           
  1248                           
  1249                           ;mcc_generated_files/mcc.c: 69:     WDTCON = 0x00;
  1250  06A2  0021               	movlb	1	; select bank1
  1251  06A3  0197               	clrf	23	;volatile
  1252  06A4                     l125:	
  1253  06A4  0008               	return
  1254  06A5                     __end_of_WDT_Initialize:	
  1255                           
  1256                           	psect	text3
  1257  06B5                     __ptext3:	
  1258 ;; *************** function _PIN_MANAGER_Initialize *****************
  1259 ;; Defined at:
  1260 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         0       0       0       0
  1276 ;;      Temps:          0       0       0       0
  1277 ;;      Totals:         0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_SYSTEM_Initialize
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _PIN_MANAGER_Initialize
  1289  06B5                     _PIN_MANAGER_Initialize:	
  1290  06B5                     l683:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1293                           
  1294                           
  1295                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1296  06B5  0022               	movlb	2	; select bank2
  1297  06B6  018C               	clrf	12	;volatile
  1298                           
  1299                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1300  06B7  018D               	clrf	13	;volatile
  1301                           
  1302                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1303  06B8  018E               	clrf	14	;volatile
  1304  06B9                     l685:	
  1305                           
  1306                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  1307  06B9  303F               	movlw	63
  1308  06BA  0021               	movlb	1	; select bank1
  1309  06BB  008C               	movwf	12	;volatile
  1310  06BC                     l687:	
  1311                           
  1312                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  1313  06BC  30F0               	movlw	240
  1314  06BD  008D               	movwf	13	;volatile
  1315  06BE                     l689:	
  1316                           
  1317                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  1318  06BE  30FF               	movlw	255
  1319  06BF  008E               	movwf	14	;volatile
  1320  06C0                     l691:	
  1321                           
  1322                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0F;
  1323  06C0  300F               	movlw	15
  1324  06C1  0023               	movlb	3	; select bank3
  1325  06C2  008E               	movwf	14	;volatile
  1326                           
  1327                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1328  06C3  018D               	clrf	13	;volatile
  1329  06C4                     l693:	
  1330                           
  1331                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  1332  06C4  3017               	movlw	23
  1333  06C5  008C               	movwf	12	;volatile
  1334  06C6                     l695:	
  1335                           
  1336                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1337  06C6  0024               	movlb	4	; select bank4
  1338  06C7  018D               	clrf	13	;volatile
  1339  06C8                     l697:	
  1340                           
  1341                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  1342  06C8  018C               	clrf	12	;volatile
  1343  06C9                     l699:	
  1344                           
  1345                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  1346  06C9  0021               	movlb	1	; select bank1
  1347  06CA  1795               	bsf	21,7	;volatile
  1348  06CB                     l701:	
  1349                           
  1350                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  1351  06CB  0022               	movlb	2	; select bank2
  1352  06CC  019D               	clrf	29	;volatile
  1353  06CD                     l154:	
  1354  06CD  0008               	return
  1355  06CE                     __end_of_PIN_MANAGER_Initialize:	
  1356                           
  1357                           	psect	text4
  1358  06A5                     __ptext4:	
  1359 ;; *************** function _OSCILLATOR_Initialize *****************
  1360 ;; Defined at:
  1361 ;;		line 58 in file "mcc_generated_files/mcc.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1375 ;;      Params:         0       0       0       0
  1376 ;;      Locals:         0       0       0       0
  1377 ;;      Temps:          0       0       0       0
  1378 ;;      Totals:         0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_SYSTEM_Initialize
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _OSCILLATOR_Initialize
  1390  06A5                     _OSCILLATOR_Initialize:	
  1391  06A5                     l703:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1394                           
  1395                           
  1396                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x7A;
  1397  06A5  307A               	movlw	122
  1398  06A6  0021               	movlb	1	; select bank1
  1399  06A7  0099               	movwf	25	;volatile
  1400  06A8                     l705:	
  1401                           
  1402                           ;mcc_generated_files/mcc.c: 63:     BORCON = 0x00;
  1403  06A8  0022               	movlb	2	; select bank2
  1404  06A9  0196               	clrf	22	;volatile
  1405  06AA                     l122:	
  1406  06AA  0008               	return
  1407  06AB                     __end_of_OSCILLATOR_Initialize:	
  1408                           
  1409                           	psect	text5
  1410  06FC                     __ptext5:	
  1411 ;; *************** function _M2Drive *****************
  1412 ;; Defined at:
  1413 ;;		line 173 in file "main.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1427 ;;      Params:         0       0       0       0
  1428 ;;      Locals:         0       0       0       0
  1429 ;;      Temps:          1       0       0       0
  1430 ;;      Totals:         1       0       0       0
  1431 ;;Total ram usage:        1 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _M2Drive
  1442  06FC                     _M2Drive:	
  1443  06FC                     l733:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _M2Drive: [wreg+status,2+status,0]
  1446                           
  1447                           
  1448                           ;main.c: 174:     PWM3DCH = 0;
  1449  06FC  002C               	movlb	12	; select bank12
  1450  06FD  0198               	clrf	24	;volatile
  1451                           
  1452                           ;main.c: 175:     PWM4DCH = 0;
  1453  06FE  019B               	clrf	27	;volatile
  1454  06FF                     l735:	
  1455                           
  1456                           ;main.c: 176:     LATCbits.LATC0 = 1;
  1457  06FF  0022               	movlb	2	; select bank2
  1458  0700  140E               	bsf	14,0	;volatile
  1459  0701                     l737:	
  1460                           
  1461                           ;main.c: 177:     LATCbits.LATC2 = 1;
  1462  0701  150E               	bsf	14,2	;volatile
  1463  0702                     l739:	
  1464                           
  1465                           ;main.c: 178:     if (Motor2 > 0) {
  1466  0702  0871               	movf	_Motor2+1,w
  1467  0703  3A80               	xorlw	128
  1468  0704  00F4               	movwf	??_M2Drive
  1469  0705  3080               	movlw	128
  1470  0706  0274               	subwf	??_M2Drive,w
  1471  0707  1D03               	skipz
  1472  0708  2F0B               	goto	u45
  1473  0709  3001               	movlw	1
  1474  070A  0270               	subwf	_Motor2,w
  1475  070B                     u45:	
  1476  070B  1C03               	skipc
  1477  070C  2F0E               	goto	u41
  1478  070D  2F0F               	goto	u40
  1479  070E                     u41:	
  1480  070E  2F15               	goto	l745
  1481  070F                     u40:	
  1482  070F                     l741:	
  1483                           
  1484                           ;main.c: 179:         PWM3DCH = Motor2;
  1485  070F  0870               	movf	_Motor2,w
  1486  0710  002C               	movlb	12	; select bank12
  1487  0711  0098               	movwf	24	;volatile
  1488  0712                     l743:	
  1489                           
  1490                           ;main.c: 180:         LATCbits.LATC2 = 0;
  1491  0712  0022               	movlb	2	; select bank2
  1492  0713  110E               	bcf	14,2	;volatile
  1493                           
  1494                           ;main.c: 181:     } else if (Motor2 == 0) {
  1495  0714  2F29               	goto	l104
  1496  0715                     l745:	
  1497  0715  0870               	movf	_Motor2,w
  1498  0716  0471               	iorwf	_Motor2+1,w
  1499  0717  1D03               	btfss	3,2
  1500  0718  2F1A               	goto	u51
  1501  0719  2F1B               	goto	u50
  1502  071A                     u51:	
  1503  071A  2F1F               	goto	l101
  1504  071B                     u50:	
  1505  071B                     l747:	
  1506                           
  1507                           ;main.c: 182:         LATCbits.LATC0 = 1;
  1508  071B  0022               	movlb	2	; select bank2
  1509  071C  140E               	bsf	14,0	;volatile
  1510                           
  1511                           ;main.c: 183:         LATCbits.LATC2 = 1;
  1512  071D  150E               	bsf	14,2	;volatile
  1513                           
  1514                           ;main.c: 184:     } else if (Motor2 < 0) {
  1515  071E  2F29               	goto	l104
  1516  071F                     l101:	
  1517  071F  1FF1               	btfss	_Motor2+1,7
  1518  0720  2F22               	goto	u61
  1519  0721  2F23               	goto	u60
  1520  0722                     u61:	
  1521  0722  2F29               	goto	l104
  1522  0723                     u60:	
  1523  0723                     l749:	
  1524                           
  1525                           ;main.c: 185:         PWM4DCH = Motor2 * -1;
  1526  0723  0370               	decf	_Motor2,w
  1527  0724  3AFF               	xorlw	255
  1528  0725  002C               	movlb	12	; select bank12
  1529  0726  009B               	movwf	27	;volatile
  1530  0727                     l751:	
  1531                           
  1532                           ;main.c: 186:         LATCbits.LATC0 = 0;
  1533  0727  0022               	movlb	2	; select bank2
  1534  0728  100E               	bcf	14,0	;volatile
  1535  0729                     l104:	
  1536  0729  0008               	return
  1537  072A                     __end_of_M2Drive:	
  1538                           
  1539                           	psect	text6
  1540  06CE                     __ptext6:	
  1541 ;; *************** function _M1Drive *****************
  1542 ;; Defined at:
  1543 ;;		line 155 in file "main.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1557 ;;      Params:         0       0       0       0
  1558 ;;      Locals:         0       0       0       0
  1559 ;;      Temps:          1       0       0       0
  1560 ;;      Totals:         1       0       0       0
  1561 ;;Total ram usage:        1 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _M1Drive
  1572  06CE                     _M1Drive:	
  1573  06CE                     l713:	
  1574                           ;incstack = 0
  1575                           ; Regs used in _M1Drive: [wreg+status,2+status,0]
  1576                           
  1577                           
  1578                           ;main.c: 156:     PWM1DCH = 0;
  1579  06CE  002C               	movlb	12	; select bank12
  1580  06CF  0192               	clrf	18	;volatile
  1581                           
  1582                           ;main.c: 157:     PWM2DCH = 0;
  1583  06D0  0195               	clrf	21	;volatile
  1584  06D1                     l715:	
  1585                           
  1586                           ;main.c: 158:     LATAbits.LATA4 = 1;
  1587  06D1  0022               	movlb	2	; select bank2
  1588  06D2  160C               	bsf	12,4	;volatile
  1589  06D3                     l717:	
  1590                           
  1591                           ;main.c: 159:     LATAbits.LATA5 = 1;
  1592  06D3  168C               	bsf	12,5	;volatile
  1593  06D4                     l719:	
  1594                           
  1595                           ;main.c: 160:     if (Motor1 > 0) {
  1596  06D4  0873               	movf	_Motor1+1,w
  1597  06D5  3A80               	xorlw	128
  1598  06D6  00F4               	movwf	??_M1Drive
  1599  06D7  3080               	movlw	128
  1600  06D8  0274               	subwf	??_M1Drive,w
  1601  06D9  1D03               	skipz
  1602  06DA  2EDD               	goto	u15
  1603  06DB  3001               	movlw	1
  1604  06DC  0272               	subwf	_Motor1,w
  1605  06DD                     u15:	
  1606  06DD  1C03               	skipc
  1607  06DE  2EE0               	goto	u11
  1608  06DF  2EE1               	goto	u10
  1609  06E0                     u11:	
  1610  06E0  2EE7               	goto	l725
  1611  06E1                     u10:	
  1612  06E1                     l721:	
  1613                           
  1614                           ;main.c: 161:         PWM1DCH = Motor1;
  1615  06E1  0872               	movf	_Motor1,w
  1616  06E2  002C               	movlb	12	; select bank12
  1617  06E3  0092               	movwf	18	;volatile
  1618  06E4                     l723:	
  1619                           
  1620                           ;main.c: 162:         LATAbits.LATA4 = 0;
  1621  06E4  0022               	movlb	2	; select bank2
  1622  06E5  120C               	bcf	12,4	;volatile
  1623                           
  1624                           ;main.c: 163:     } else if (Motor1 == 0) {
  1625  06E6  2EFB               	goto	l96
  1626  06E7                     l725:	
  1627  06E7  0872               	movf	_Motor1,w
  1628  06E8  0473               	iorwf	_Motor1+1,w
  1629  06E9  1D03               	btfss	3,2
  1630  06EA  2EEC               	goto	u21
  1631  06EB  2EED               	goto	u20
  1632  06EC                     u21:	
  1633  06EC  2EF1               	goto	l93
  1634  06ED                     u20:	
  1635  06ED                     l727:	
  1636                           
  1637                           ;main.c: 164:         LATAbits.LATA4 = 1;
  1638  06ED  0022               	movlb	2	; select bank2
  1639  06EE  160C               	bsf	12,4	;volatile
  1640                           
  1641                           ;main.c: 165:         LATAbits.LATA5 = 1;
  1642  06EF  168C               	bsf	12,5	;volatile
  1643                           
  1644                           ;main.c: 166:     } else if (Motor1 < 0) {
  1645  06F0  2EFB               	goto	l96
  1646  06F1                     l93:	
  1647  06F1  1FF3               	btfss	_Motor1+1,7
  1648  06F2  2EF4               	goto	u31
  1649  06F3  2EF5               	goto	u30
  1650  06F4                     u31:	
  1651  06F4  2EFB               	goto	l96
  1652  06F5                     u30:	
  1653  06F5                     l729:	
  1654                           
  1655                           ;main.c: 167:         PWM2DCH = Motor1 * -1;
  1656  06F5  0372               	decf	_Motor1,w
  1657  06F6  3AFF               	xorlw	255
  1658  06F7  002C               	movlb	12	; select bank12
  1659  06F8  0095               	movwf	21	;volatile
  1660  06F9                     l731:	
  1661                           
  1662                           ;main.c: 168:         LATAbits.LATA5 = 0;
  1663  06F9  0022               	movlb	2	; select bank2
  1664  06FA  128C               	bcf	12,5	;volatile
  1665  06FB                     l96:	
  1666  06FB  0008               	return
  1667  06FC                     __end_of_M1Drive:	
  1668  007E                     btemp	set	126	;btemp
  1669  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_M1Drive
    _main->_M2Drive

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMMON     2     2      0
                            _M1Drive
                            _M2Drive
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _M2Drive                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _M1Drive                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _M1Drive
   _M2Drive
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       7       2       50.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       7      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 25 22:45:54 2020

                    __CFG_CP$OFF 0000                               l93 06F1                               l96 06FB  
                             u10 06E1                               u11 06E0                               u20 06ED  
                             u21 06EC                               u30 06F5                               u31 06F4  
                             u15 06DD                               u40 070F                               u41 070E  
                             u50 071B                               u51 071A                               u60 0723  
                             u61 0722                               u45 070B                               u70 075F  
                             u71 075E                               u80 0763                               u81 0762  
                             u90 0770                               u91 076F                               u95 076C  
                            l101 071F                              l104 0729                              l122 06AA  
                            l125 06A4                              l119 06B4                              l154 06CD  
                            l701 06CB                              l703 06A5                              l711 06B1  
                            l721 06E1                              l713 06CE                              l705 06A8  
                            l801 0756                              l731 06F9                              l723 06E4  
                            l715 06D1                              l707 06A2                              l811 0770  
                            l803 0758                              l725 06E7                              l717 06D3  
                            l741 070F                              l733 06FC                              l709 06AB  
                            l821 078F                              l813 0774                              l805 075A  
                            l727 06ED                              l719 06D4                              l751 0727  
                            l743 0712                              l735 06FF                              l831 079F  
                            l823 0793                              l815 0779                              l807 075F  
                            l729 06F5                              l745 0715                              l737 0701  
                            l841 07C6                              l833 07A3                              l825 0795  
                            l817 0786                              l809 0763                              l761 0735  
                            l753 072A                              l747 071B                              l739 0702  
                            l691 06C0                              l683 06B5                              l851 07D9  
                            l843 07CA                              l835 07B0                              l827 0799  
                            l819 078A                              l771 073E                              l763 0737  
                            l755 072D                              l749 0723                              l693 06C4  
                            l685 06B9                              l861 07EA                              l853 07DD  
                            l845 07CF                              l837 07B4                              l829 079D  
                            l781 0749                              l773 0740                              l765 0738  
                            l757 0730                              l695 06C6                              l687 06BC  
                            l847 07D3                              l839 07B9                              l855 07E0  
                            l791 0750                              l783 074A                              l775 0743  
                            l767 0739                              l759 0733                              l697 06C8  
                            l689 06BE                              l857 07E4                              l849 07D5  
                            l793 0751                              l785 074C                              l777 0745  
                            l769 073C                              l699 06C9                              l859 07E7  
                            l795 0752                              l787 074D                              l779 0748  
                            l797 0754                              l789 074E                              l799 0755  
                            u100 0779                              u101 0778                              u110 0786  
                            u111 0785                              u200 07CF                              u120 078F  
                            u201 07CE                              u121 078E                              u210 07D3  
                            u130 0793                              u211 07D2                              u131 0792  
                            u115 0782                              u220 07D9                              u140 0799  
                            u221 07D8                              u141 0798                              u230 07DD  
                            u150 079D                              u231 07DC                              u151 079C  
                            u160 07A3                              u161 07A2                              u170 07B0  
                            u171 07AF                              u180 07B9                              u181 07B8  
                            u190 07C6                              _PR2 001B                              u247 07EF  
                            u191 07C5                              u175 07AC                              u195 07C2  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                __end_of_M1Drive 06FC                  __end_of_M2Drive 072A                     __CFG_LVP$OFF 0000  
                           _LATA 010C                             _LATB 010D                             _LATC 010E  
                           _WPUA 020C                             _WPUB 020D                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 072A                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0002                    __CFG_MCLRE$ON 0000  
 __size_of_OSCILLATOR_Initialize 0006    __end_of_OSCILLATOR_Initialize 06AB                            ?_main 0074  
                  __CFG_WDTE$OFF 0000                            _T2CON 001C                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E                   _WDT_Initialize 06A2  
                          status 0003                            wtemp0 007E                  __initialization 07F9  
                   __end_of_main 07F9                   __CFG_LPBOR$OFF 0000                           ??_main 0075  
                      ??_M1Drive 0074                        ??_M2Drive 0074           __end_of_WDT_Initialize 06A5  
                         _APFCON 011D                           _ANSELA 018C                           _ANSELB 018D  
                         _ANSELC 018E                           _BORCON 0116                           _OSCCON 0099  
                         _WDTCON 0097                   __CFG_PWRTE$OFF 0000                           _Motor1 0072  
                         _Motor2 0070                   __CFG_STVREN$ON 0000                  ?_WDT_Initialize 0074  
              _SYSTEM_Initialize 06AB          __end_of__initialization 07FD               ?_SYSTEM_Initialize 0074  
                 __pcstackCOMMON 0074              ??_SYSTEM_Initialize 0074                   _OPTION_REGbits 0095  
      __end_of_SYSTEM_Initialize 06B5                       __pmaintext 072A                          _M1Drive 06CE  
                        _M2Drive 06FC                          _PWM1DCH 0612                          _PWM1DCL 0611  
                        _PWM2DCH 0615                          _PWM2DCL 0614                          _PWM3DCH 0618  
                        _PWM3DCL 0617                          _PWM4DCH 061B                          _PWM1CON 0613  
                        _PWM4DCL 061A                          _PWM2CON 0616                          _PWM3CON 0619  
                        _PWM4CON 061C                          __ptext1 06AB                          __ptext2 06A2  
                        __ptext3 06B5                          __ptext4 06A5                          __ptext5 06FC  
                        __ptext6 06CE            _OSCILLATOR_Initialize 06A5         ??_PIN_MANAGER_Initialize 0074  
     __size_of_SYSTEM_Initialize 000A             end_of_initialization 07FD                 ??_WDT_Initialize 0074  
                      _PORTBbits 000D                        _PORTCbits 000E                 __CFG_FOSC$INTOSC 0000  
         ?_OSCILLATOR_Initialize 0074              start_initialization 07F9  __size_of_PIN_MANAGER_Initialize 0019  
                       ?_M1Drive 0074                         ?_M2Drive 0074                      __pbssCOMMON 0070  
                      ___latbits 0001           _PIN_MANAGER_Initialize 06B5                         _LATAbits 010C  
                       _LATCbits 010E                 __size_of_M1Drive 002E                 __size_of_M2Drive 002E  
        ??_OSCILLATOR_Initialize 0074                    __size_of_main 00CF          __size_of_WDT_Initialize 0003  
        ?_PIN_MANAGER_Initialize 0074                __CFG_CLKOUTEN$OFF 0000                       _OSCCONbits 0099  
 __end_of_PIN_MANAGER_Initialize 06CE  
