

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 13:17:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1508 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  008E                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  0111                     	;# 
    98  0112                     	;# 
    99  0113                     	;# 
   100  0114                     	;# 
   101  0115                     	;# 
   102  0116                     	;# 
   103  0117                     	;# 
   104  0118                     	;# 
   105  0119                     	;# 
   106  011D                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  018E                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0197                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019E                     	;# 
   126  019F                     	;# 
   127  020C                     	;# 
   128  020D                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  0394                     	;# 
   148  0395                     	;# 
   149  0396                     	;# 
   150  0498                     	;# 
   151  0498                     	;# 
   152  0499                     	;# 
   153  049A                     	;# 
   154  049B                     	;# 
   155  049B                     	;# 
   156  049C                     	;# 
   157  049D                     	;# 
   158  049E                     	;# 
   159  049F                     	;# 
   160  0611                     	;# 
   161  0612                     	;# 
   162  0613                     	;# 
   163  0613                     	;# 
   164  0614                     	;# 
   165  0615                     	;# 
   166  0616                     	;# 
   167  0616                     	;# 
   168  0617                     	;# 
   169  0618                     	;# 
   170  0619                     	;# 
   171  0619                     	;# 
   172  061A                     	;# 
   173  061B                     	;# 
   174  061C                     	;# 
   175  061C                     	;# 
   176  0691                     	;# 
   177  0692                     	;# 
   178  0693                     	;# 
   179  0694                     	;# 
   180  0695                     	;# 
   181  0F0F                     	;# 
   182  0F10                     	;# 
   183  0F11                     	;# 
   184  0F12                     	;# 
   185  0F13                     	;# 
   186  0F14                     	;# 
   187  0F15                     	;# 
   188  0F16                     	;# 
   189  0F17                     	;# 
   190  0F18                     	;# 
   191  0F19                     	;# 
   192  0F1A                     	;# 
   193  0F1B                     	;# 
   194  0F1C                     	;# 
   195  0F1D                     	;# 
   196  0F1E                     	;# 
   197  0F1F                     	;# 
   198  0F20                     	;# 
   199  0F21                     	;# 
   200  0F22                     	;# 
   201  0F23                     	;# 
   202  0F24                     	;# 
   203  0F25                     	;# 
   204  0F26                     	;# 
   205  0F27                     	;# 
   206  0F28                     	;# 
   207  0F29                     	;# 
   208  0F2A                     	;# 
   209  0F2B                     	;# 
   210  0F2C                     	;# 
   211  0F2D                     	;# 
   212  0F2E                     	;# 
   213  0F2F                     	;# 
   214  0F8C                     	;# 
   215  0F8D                     	;# 
   216  0F91                     	;# 
   217  0F95                     	;# 
   218  0F96                     	;# 
   219  0F97                     	;# 
   220  0F9C                     	;# 
   221  0F9D                     	;# 
   222  0F9E                     	;# 
   223  0FE3                     	;# 
   224  0FE4                     	;# 
   225  0FE5                     	;# 
   226  0FE6                     	;# 
   227  0FE7                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEB                     	;# 
   232  0FED                     	;# 
   233  0FEE                     	;# 
   234  0FEF                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011D                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  018E                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0194                     	;# 
   301  0195                     	;# 
   302  0196                     	;# 
   303  0197                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020C                     	;# 
   313  020D                     	;# 
   314  0211                     	;# 
   315  0211                     	;# 
   316  0212                     	;# 
   317  0212                     	;# 
   318  0213                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0216                     	;# 
   327  0217                     	;# 
   328  0217                     	;# 
   329  0391                     	;# 
   330  0392                     	;# 
   331  0393                     	;# 
   332  0394                     	;# 
   333  0395                     	;# 
   334  0396                     	;# 
   335  0498                     	;# 
   336  0498                     	;# 
   337  0499                     	;# 
   338  049A                     	;# 
   339  049B                     	;# 
   340  049B                     	;# 
   341  049C                     	;# 
   342  049D                     	;# 
   343  049E                     	;# 
   344  049F                     	;# 
   345  0611                     	;# 
   346  0612                     	;# 
   347  0613                     	;# 
   348  0613                     	;# 
   349  0614                     	;# 
   350  0615                     	;# 
   351  0616                     	;# 
   352  0616                     	;# 
   353  0617                     	;# 
   354  0618                     	;# 
   355  0619                     	;# 
   356  0619                     	;# 
   357  061A                     	;# 
   358  061B                     	;# 
   359  061C                     	;# 
   360  061C                     	;# 
   361  0691                     	;# 
   362  0692                     	;# 
   363  0693                     	;# 
   364  0694                     	;# 
   365  0695                     	;# 
   366  0F0F                     	;# 
   367  0F10                     	;# 
   368  0F11                     	;# 
   369  0F12                     	;# 
   370  0F13                     	;# 
   371  0F14                     	;# 
   372  0F15                     	;# 
   373  0F16                     	;# 
   374  0F17                     	;# 
   375  0F18                     	;# 
   376  0F19                     	;# 
   377  0F1A                     	;# 
   378  0F1B                     	;# 
   379  0F1C                     	;# 
   380  0F1D                     	;# 
   381  0F1E                     	;# 
   382  0F1F                     	;# 
   383  0F20                     	;# 
   384  0F21                     	;# 
   385  0F22                     	;# 
   386  0F23                     	;# 
   387  0F24                     	;# 
   388  0F25                     	;# 
   389  0F26                     	;# 
   390  0F27                     	;# 
   391  0F28                     	;# 
   392  0F29                     	;# 
   393  0F2A                     	;# 
   394  0F2B                     	;# 
   395  0F2C                     	;# 
   396  0F2D                     	;# 
   397  0F2E                     	;# 
   398  0F2F                     	;# 
   399  0F8C                     	;# 
   400  0F8D                     	;# 
   401  0F91                     	;# 
   402  0F95                     	;# 
   403  0F96                     	;# 
   404  0F97                     	;# 
   405  0F9C                     	;# 
   406  0F9D                     	;# 
   407  0F9E                     	;# 
   408  0FE3                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0015                     	;# 
   439  0016                     	;# 
   440  0016                     	;# 
   441  0017                     	;# 
   442  0018                     	;# 
   443  0019                     	;# 
   444  001A                     	;# 
   445  001B                     	;# 
   446  001C                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0099                     	;# 
   457  009A                     	;# 
   458  009B                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  0111                     	;# 
   468  0112                     	;# 
   469  0113                     	;# 
   470  0114                     	;# 
   471  0115                     	;# 
   472  0116                     	;# 
   473  0117                     	;# 
   474  0118                     	;# 
   475  0119                     	;# 
   476  011D                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  018E                     	;# 
   480  0191                     	;# 
   481  0191                     	;# 
   482  0192                     	;# 
   483  0193                     	;# 
   484  0193                     	;# 
   485  0194                     	;# 
   486  0195                     	;# 
   487  0196                     	;# 
   488  0197                     	;# 
   489  0199                     	;# 
   490  019A                     	;# 
   491  019B                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  019F                     	;# 
   497  020C                     	;# 
   498  020D                     	;# 
   499  0211                     	;# 
   500  0211                     	;# 
   501  0212                     	;# 
   502  0212                     	;# 
   503  0213                     	;# 
   504  0213                     	;# 
   505  0214                     	;# 
   506  0214                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0216                     	;# 
   512  0217                     	;# 
   513  0217                     	;# 
   514  0391                     	;# 
   515  0392                     	;# 
   516  0393                     	;# 
   517  0394                     	;# 
   518  0395                     	;# 
   519  0396                     	;# 
   520  0498                     	;# 
   521  0498                     	;# 
   522  0499                     	;# 
   523  049A                     	;# 
   524  049B                     	;# 
   525  049B                     	;# 
   526  049C                     	;# 
   527  049D                     	;# 
   528  049E                     	;# 
   529  049F                     	;# 
   530  0611                     	;# 
   531  0612                     	;# 
   532  0613                     	;# 
   533  0613                     	;# 
   534  0614                     	;# 
   535  0615                     	;# 
   536  0616                     	;# 
   537  0616                     	;# 
   538  0617                     	;# 
   539  0618                     	;# 
   540  0619                     	;# 
   541  0619                     	;# 
   542  061A                     	;# 
   543  061B                     	;# 
   544  061C                     	;# 
   545  061C                     	;# 
   546  0691                     	;# 
   547  0692                     	;# 
   548  0693                     	;# 
   549  0694                     	;# 
   550  0695                     	;# 
   551  0F0F                     	;# 
   552  0F10                     	;# 
   553  0F11                     	;# 
   554  0F12                     	;# 
   555  0F13                     	;# 
   556  0F14                     	;# 
   557  0F15                     	;# 
   558  0F16                     	;# 
   559  0F17                     	;# 
   560  0F18                     	;# 
   561  0F19                     	;# 
   562  0F1A                     	;# 
   563  0F1B                     	;# 
   564  0F1C                     	;# 
   565  0F1D                     	;# 
   566  0F1E                     	;# 
   567  0F1F                     	;# 
   568  0F20                     	;# 
   569  0F21                     	;# 
   570  0F22                     	;# 
   571  0F23                     	;# 
   572  0F24                     	;# 
   573  0F25                     	;# 
   574  0F26                     	;# 
   575  0F27                     	;# 
   576  0F28                     	;# 
   577  0F29                     	;# 
   578  0F2A                     	;# 
   579  0F2B                     	;# 
   580  0F2C                     	;# 
   581  0F2D                     	;# 
   582  0F2E                     	;# 
   583  0F2F                     	;# 
   584  0F8C                     	;# 
   585  0F8D                     	;# 
   586  0F91                     	;# 
   587  0F95                     	;# 
   588  0F96                     	;# 
   589  0F97                     	;# 
   590  0F9C                     	;# 
   591  0F9D                     	;# 
   592  0F9E                     	;# 
   593  0FE3                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  000E                     _PORTCbits	set	14
   606  000D                     _PORTBbits	set	13
   607  001B                     _PR2	set	27
   608  001C                     _T2CON	set	28
   609  0095                     _OPTION_REGbits	set	149
   610  0097                     _WDTCON	set	151
   611  0099                     _OSCCON	set	153
   612  008E                     _TRISC	set	142
   613  008D                     _TRISB	set	141
   614  008C                     _TRISA	set	140
   615  0099                     _OSCCONbits	set	153
   616  011D                     _APFCON	set	285
   617  010D                     _LATB	set	269
   618  0116                     _BORCON	set	278
   619  010E                     _LATCbits	set	270
   620  010C                     _LATAbits	set	268
   621  010C                     _LATA	set	268
   622  010E                     _LATC	set	270
   623  018E                     _ANSELC	set	398
   624  018D                     _ANSELB	set	397
   625  018C                     _ANSELA	set	396
   626  020C                     _WPUA	set	524
   627  020D                     _WPUB	set	525
   628  061A                     _PWM4DCL	set	1562
   629  061B                     _PWM4DCH	set	1563
   630  061C                     _PWM4CON	set	1564
   631  0617                     _PWM3DCL	set	1559
   632  0618                     _PWM3DCH	set	1560
   633  0619                     _PWM3CON	set	1561
   634  0614                     _PWM2DCL	set	1556
   635  0615                     _PWM2DCH	set	1557
   636  0616                     _PWM2CON	set	1558
   637  0611                     _PWM1DCL	set	1553
   638  0612                     _PWM1DCH	set	1554
   639  0613                     _PWM1CON	set	1555
   640                           
   641                           ; #config settings
   642  0000                     
   643                           	psect	cinit
   644  07F9                     start_initialization:	
   645  07F9                     __initialization:	
   646                           
   647                           ; Clear objects allocated to COMMON
   648  07F9  01F0               	clrf	__pbssCOMMON& (0+127)
   649  07FA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   650  07FB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   651  07FC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   652  07FD                     end_of_initialization:	
   653                           ;End of C runtime variable initialization code
   654                           
   655  07FD                     __end_of__initialization:	
   656  07FD  0020               	movlb	0
   657  07FE  3187  2F33         	ljmp	_main	;jump to C main() function
   658                           
   659                           	psect	bssCOMMON
   660  0070                     __pbssCOMMON:	
   661  0070                     _Motor2:	
   662  0070                     	ds	2
   663  0072                     _Motor1:	
   664  0072                     	ds	2
   665                           
   666                           	psect	cstackCOMMON
   667  0074                     __pcstackCOMMON:	
   668  0074                     ?_SYSTEM_Initialize:	
   669  0074                     ??_SYSTEM_Initialize:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0074                     ?_M1Drive:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0074                     ??_M1Drive:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0074                     ?_M2Drive:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0074                     ??_M2Drive:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0074                     ?_PIN_MANAGER_Initialize:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0074                     ??_PIN_MANAGER_Initialize:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0074                     ?_OSCILLATOR_Initialize:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0074                     ??_OSCILLATOR_Initialize:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0074                     ?_WDT_Initialize:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0074                     ??_WDT_Initialize:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0074                     ?_main:	
   703                           ; 1 bytes @ 0x0
   704                           
   705                           
   706                           ; 1 bytes @ 0x0
   707  0074                     	ds	1
   708  0075                     ??_main:	
   709                           
   710                           ; 1 bytes @ 0x1
   711  0075                     	ds	2
   712                           
   713                           	psect	maintext
   714  0733                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 67 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B1F/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   734 ;;      Params:         0       0       0       0
   735 ;;      Locals:         0       0       0       0
   736 ;;      Temps:          2       0       0       0
   737 ;;      Totals:         2       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels required when called:    2
   740 ;; This function calls:
   741 ;;		_M1Drive
   742 ;;		_M2Drive
   743 ;;		_SYSTEM_Initialize
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _main
   751  0733                     _main:	
   752  0733                     l751:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;main.c: 70:     SYSTEM_Initialize();
   758  0733  3186  26B4  3187   	fcall	_SYSTEM_Initialize
   759  0736                     l753:	
   760                           
   761                           ;main.c: 73:     OSCCONbits.IRCF = 15;
   762  0736  3078               	movlw	120
   763  0737  0021               	movlb	1	; select bank1
   764  0738  0499               	iorwf	25,f	;volatile
   765  0739                     l755:	
   766                           
   767                           ;main.c: 76:     LATC = 0b00000101;
   768  0739  3005               	movlw	5
   769  073A  0022               	movlb	2	; select bank2
   770  073B  008E               	movwf	14	;volatile
   771  073C                     l757:	
   772                           
   773                           ;main.c: 77:     LATA = 0b00110000;
   774  073C  3030               	movlw	48
   775  073D  008C               	movwf	12	;volatile
   776  073E                     l759:	
   777                           
   778                           ;main.c: 78:     ANSELA = 0;
   779  073E  0023               	movlb	3	; select bank3
   780  073F  018C               	clrf	12	;volatile
   781  0740                     l761:	
   782                           
   783                           ;main.c: 79:     ANSELB = 0;
   784  0740  018D               	clrf	13	;volatile
   785  0741                     l763:	
   786                           
   787                           ;main.c: 80:     ANSELC = 0;
   788  0741  018E               	clrf	14	;volatile
   789  0742                     l765:	
   790                           
   791                           ;main.c: 81:     TRISA = 0x08;
   792  0742  3008               	movlw	8
   793  0743  0021               	movlb	1	; select bank1
   794  0744  008C               	movwf	12	;volatile
   795  0745                     l767:	
   796                           
   797                           ;main.c: 82:     TRISB = 0xF0;
   798  0745  30F0               	movlw	240
   799  0746  008D               	movwf	13	;volatile
   800  0747                     l769:	
   801                           
   802                           ;main.c: 83:     TRISC = 0xC0;
   803  0747  30C0               	movlw	192
   804  0748  008E               	movwf	14	;volatile
   805  0749                     l771:	
   806                           
   807                           ;main.c: 86:     T2CON = 0x04;
   808  0749  3004               	movlw	4
   809  074A  0020               	movlb	0	; select bank0
   810  074B  009C               	movwf	28	;volatile
   811  074C                     l773:	
   812                           
   813                           ;main.c: 87:     PR2 = 0xFF;
   814  074C  30FF               	movlw	255
   815  074D  009B               	movwf	27	;volatile
   816  074E                     l775:	
   817                           
   818                           ;main.c: 90:     PWM1CON = 0xC0;
   819  074E  30C0               	movlw	192
   820  074F  002C               	movlb	12	; select bank12
   821  0750  0093               	movwf	19	;volatile
   822  0751                     l777:	
   823                           
   824                           ;main.c: 91:     PWM1DCH = 0;
   825  0751  0192               	clrf	18	;volatile
   826  0752                     l779:	
   827                           
   828                           ;main.c: 92:     PWM1DCL = 0;
   829  0752  0191               	clrf	17	;volatile
   830  0753                     l781:	
   831                           
   832                           ;main.c: 93:     PWM2CON = 0xC0;
   833  0753  30C0               	movlw	192
   834  0754  0096               	movwf	22	;volatile
   835  0755                     l783:	
   836                           
   837                           ;main.c: 94:     PWM2DCH = 0;
   838  0755  0195               	clrf	21	;volatile
   839  0756                     l785:	
   840                           
   841                           ;main.c: 95:     PWM2DCL = 0;
   842  0756  0194               	clrf	20	;volatile
   843  0757                     l787:	
   844                           
   845                           ;main.c: 96:     PWM3CON = 0xC0;
   846  0757  30C0               	movlw	192
   847  0758  0099               	movwf	25	;volatile
   848  0759                     l789:	
   849                           
   850                           ;main.c: 97:     PWM3DCH = 0;
   851  0759  0198               	clrf	24	;volatile
   852  075A                     l791:	
   853                           
   854                           ;main.c: 98:     PWM3DCL = 0;
   855  075A  0197               	clrf	23	;volatile
   856  075B                     l793:	
   857                           
   858                           ;main.c: 99:     PWM4CON = 0xC0;
   859  075B  30C0               	movlw	192
   860  075C  009C               	movwf	28	;volatile
   861  075D                     l795:	
   862                           
   863                           ;main.c: 100:     PWM4DCH = 0;
   864  075D  019B               	clrf	27	;volatile
   865  075E                     l797:	
   866                           
   867                           ;main.c: 101:     PWM4DCL = 0;
   868  075E  019A               	clrf	26	;volatile
   869  075F                     l799:	
   870                           
   871                           ;main.c: 104:     Motor1 = 0;
   872  075F  01F2               	clrf	_Motor1
   873  0760  01F3               	clrf	_Motor1+1
   874  0761                     l801:	
   875                           
   876                           ;main.c: 105:     Motor2 = 0;
   877  0761  01F0               	clrf	_Motor2
   878  0762  01F1               	clrf	_Motor2+1
   879  0763                     l803:	
   880                           
   881                           ;main.c: 109:         if (PORTBbits.RB4 == 1) {
   882  0763  0020               	movlb	0	; select bank0
   883  0764  1E0D               	btfss	13,4	;volatile
   884  0765  2F67               	goto	u71
   885  0766  2F68               	goto	u70
   886  0767                     u71:	
   887  0767  2F79               	goto	l809
   888  0768                     u70:	
   889  0768                     l805:	
   890                           
   891                           ;main.c: 110:             if (Motor1 < 250) {
   892  0768  0873               	movf	_Motor1+1,w
   893  0769  3A80               	xorlw	128
   894  076A  00F5               	movwf	??_main
   895  076B  3080               	movlw	128
   896  076C  0275               	subwf	??_main,w
   897  076D  1D03               	skipz
   898  076E  2F71               	goto	u85
   899  076F  30FA               	movlw	250
   900  0770  0272               	subwf	_Motor1,w
   901  0771                     u85:	
   902  0771  1803               	skipnc
   903  0772  2F74               	goto	u81
   904  0773  2F75               	goto	u80
   905  0774                     u81:	
   906  0774  2F79               	goto	l809
   907  0775                     u80:	
   908  0775                     l807:	
   909                           
   910                           ;main.c: 111:                 Motor1 += 50;
   911  0775  3032               	movlw	50
   912  0776  07F2               	addwf	_Motor1,f
   913  0777  3000               	movlw	0
   914  0778  3DF3               	addwfc	_Motor1+1,f
   915  0779                     l809:	
   916                           
   917                           ;main.c: 114:         if (PORTBbits.RB5 == 1) {
   918  0779  0020               	movlb	0	; select bank0
   919  077A  1E8D               	btfss	13,5	;volatile
   920  077B  2F7D               	goto	u91
   921  077C  2F7E               	goto	u90
   922  077D                     u91:	
   923  077D  2F8F               	goto	l815
   924  077E                     u90:	
   925  077E                     l811:	
   926                           
   927                           ;main.c: 115:             if (Motor1 > -250) {
   928  077E  0873               	movf	_Motor1+1,w
   929  077F  3A80               	xorlw	128
   930  0780  00F5               	movwf	??_main
   931  0781  307F               	movlw	127
   932  0782  0275               	subwf	??_main,w
   933  0783  1D03               	skipz
   934  0784  2F87               	goto	u105
   935  0785  3007               	movlw	7
   936  0786  0272               	subwf	_Motor1,w
   937  0787                     u105:	
   938  0787  1C03               	skipc
   939  0788  2F8A               	goto	u101
   940  0789  2F8B               	goto	u100
   941  078A                     u101:	
   942  078A  2F8F               	goto	l815
   943  078B                     u100:	
   944  078B                     l813:	
   945                           
   946                           ;main.c: 116:                 Motor1 -= 50;
   947  078B  30CE               	movlw	206
   948  078C  07F2               	addwf	_Motor1,f
   949  078D  30FF               	movlw	255
   950  078E  3DF3               	addwfc	_Motor1+1,f
   951  078F                     l815:	
   952                           
   953                           ;main.c: 119:         if (PORTBbits.RB4 == 0 && PORTBbits.RB5 == 0) {
   954  078F  0020               	movlb	0	; select bank0
   955  0790  1A0D               	btfsc	13,4	;volatile
   956  0791  2F93               	goto	u111
   957  0792  2F94               	goto	u110
   958  0793                     u111:	
   959  0793  2F9A               	goto	l821
   960  0794                     u110:	
   961  0794                     l817:	
   962  0794  1A8D               	btfsc	13,5	;volatile
   963  0795  2F97               	goto	u121
   964  0796  2F98               	goto	u120
   965  0797                     u121:	
   966  0797  2F9A               	goto	l821
   967  0798                     u120:	
   968  0798                     l819:	
   969                           
   970                           ;main.c: 120:             Motor1 = 0;
   971  0798  01F2               	clrf	_Motor1
   972  0799  01F3               	clrf	_Motor1+1
   973  079A                     l821:	
   974                           
   975                           ;main.c: 122:         if (PORTBbits.RB4 == 1 && PORTBbits.RB5 == 1) {
   976  079A  1E0D               	btfss	13,4	;volatile
   977  079B  2F9D               	goto	u131
   978  079C  2F9E               	goto	u130
   979  079D                     u131:	
   980  079D  2FA4               	goto	l827
   981  079E                     u130:	
   982  079E                     l823:	
   983  079E  1E8D               	btfss	13,5	;volatile
   984  079F  2FA1               	goto	u141
   985  07A0  2FA2               	goto	u140
   986  07A1                     u141:	
   987  07A1  2FA4               	goto	l827
   988  07A2                     u140:	
   989  07A2                     l825:	
   990                           
   991                           ;main.c: 123:             Motor1 = 0;
   992  07A2  01F2               	clrf	_Motor1
   993  07A3  01F3               	clrf	_Motor1+1
   994  07A4                     l827:	
   995                           
   996                           ;main.c: 126:         if (PORTBbits.RB6 == 1) {
   997  07A4  1F0D               	btfss	13,6	;volatile
   998  07A5  2FA7               	goto	u151
   999  07A6  2FA8               	goto	u150
  1000  07A7                     u151:	
  1001  07A7  2FB9               	goto	l833
  1002  07A8                     u150:	
  1003  07A8                     l829:	
  1004                           
  1005                           ;main.c: 127:             if (Motor2 < 250) {
  1006  07A8  0871               	movf	_Motor2+1,w
  1007  07A9  3A80               	xorlw	128
  1008  07AA  00F5               	movwf	??_main
  1009  07AB  3080               	movlw	128
  1010  07AC  0275               	subwf	??_main,w
  1011  07AD  1D03               	skipz
  1012  07AE  2FB1               	goto	u165
  1013  07AF  30FA               	movlw	250
  1014  07B0  0270               	subwf	_Motor2,w
  1015  07B1                     u165:	
  1016  07B1  1803               	skipnc
  1017  07B2  2FB4               	goto	u161
  1018  07B3  2FB5               	goto	u160
  1019  07B4                     u161:	
  1020  07B4  2FB9               	goto	l833
  1021  07B5                     u160:	
  1022  07B5                     l831:	
  1023                           
  1024                           ;main.c: 128:                 Motor2 += 50;
  1025  07B5  3032               	movlw	50
  1026  07B6  07F0               	addwf	_Motor2,f
  1027  07B7  3000               	movlw	0
  1028  07B8  3DF1               	addwfc	_Motor2+1,f
  1029  07B9                     l833:	
  1030                           
  1031                           ;main.c: 131:         if (PORTCbits.RC6 == 1) {
  1032  07B9  0020               	movlb	0	; select bank0
  1033  07BA  1F0E               	btfss	14,6	;volatile
  1034  07BB  2FBD               	goto	u171
  1035  07BC  2FBE               	goto	u170
  1036  07BD                     u171:	
  1037  07BD  2FCF               	goto	l839
  1038  07BE                     u170:	
  1039  07BE                     l835:	
  1040                           
  1041                           ;main.c: 132:             if (Motor2 > -250) {
  1042  07BE  0871               	movf	_Motor2+1,w
  1043  07BF  3A80               	xorlw	128
  1044  07C0  00F5               	movwf	??_main
  1045  07C1  307F               	movlw	127
  1046  07C2  0275               	subwf	??_main,w
  1047  07C3  1D03               	skipz
  1048  07C4  2FC7               	goto	u185
  1049  07C5  3007               	movlw	7
  1050  07C6  0270               	subwf	_Motor2,w
  1051  07C7                     u185:	
  1052  07C7  1C03               	skipc
  1053  07C8  2FCA               	goto	u181
  1054  07C9  2FCB               	goto	u180
  1055  07CA                     u181:	
  1056  07CA  2FCF               	goto	l839
  1057  07CB                     u180:	
  1058  07CB                     l837:	
  1059                           
  1060                           ;main.c: 133:                 Motor2 -= 50;
  1061  07CB  30CE               	movlw	206
  1062  07CC  07F0               	addwf	_Motor2,f
  1063  07CD  30FF               	movlw	255
  1064  07CE  3DF1               	addwfc	_Motor2+1,f
  1065  07CF                     l839:	
  1066                           
  1067                           ;main.c: 136:         if (PORTBbits.RB6 == 0 && PORTCbits.RC6 == 0) {
  1068  07CF  0020               	movlb	0	; select bank0
  1069  07D0  1B0D               	btfsc	13,6	;volatile
  1070  07D1  2FD3               	goto	u191
  1071  07D2  2FD4               	goto	u190
  1072  07D3                     u191:	
  1073  07D3  2FDA               	goto	l845
  1074  07D4                     u190:	
  1075  07D4                     l841:	
  1076  07D4  1B0E               	btfsc	14,6	;volatile
  1077  07D5  2FD7               	goto	u201
  1078  07D6  2FD8               	goto	u200
  1079  07D7                     u201:	
  1080  07D7  2FDA               	goto	l845
  1081  07D8                     u200:	
  1082  07D8                     l843:	
  1083                           
  1084                           ;main.c: 137:             Motor2 = 0;
  1085  07D8  01F0               	clrf	_Motor2
  1086  07D9  01F1               	clrf	_Motor2+1
  1087  07DA                     l845:	
  1088                           
  1089                           ;main.c: 139:         if (PORTBbits.RB6 == 1 && PORTCbits.RC6 == 1) {
  1090  07DA  1F0D               	btfss	13,6	;volatile
  1091  07DB  2FDD               	goto	u211
  1092  07DC  2FDE               	goto	u210
  1093  07DD                     u211:	
  1094  07DD  2FE4               	goto	l851
  1095  07DE                     u210:	
  1096  07DE                     l847:	
  1097  07DE  1F0E               	btfss	14,6	;volatile
  1098  07DF  2FE1               	goto	u221
  1099  07E0  2FE2               	goto	u220
  1100  07E1                     u221:	
  1101  07E1  2FE4               	goto	l851
  1102  07E2                     u220:	
  1103  07E2                     l849:	
  1104                           
  1105                           ;main.c: 140:             Motor2 = 0;
  1106  07E2  01F0               	clrf	_Motor2
  1107  07E3  01F1               	clrf	_Motor2+1
  1108  07E4                     l851:	
  1109                           
  1110                           ;main.c: 144:         M1Drive();
  1111  07E4  3186  26D7  3187   	fcall	_M1Drive
  1112  07E7                     l853:	
  1113                           
  1114                           ;main.c: 145:         M2Drive();
  1115  07E7  3187  2705  3187   	fcall	_M2Drive
  1116  07EA                     l855:	
  1117                           
  1118                           ;main.c: 146:         _delay((unsigned long)((100)*(16000000/4000.0)));
  1119  07EA  3003               	movlw	3
  1120  07EB  00F6               	movwf	??_main+1
  1121  07EC  3008               	movlw	8
  1122  07ED  00F5               	movwf	??_main
  1123  07EE  3077               	movlw	119
  1124  07EF                     u237:	
  1125  07EF  0B89               	decfsz	9,f
  1126  07F0  2FEF               	goto	u237
  1127  07F1  0BF5               	decfsz	??_main,f
  1128  07F2  2FEF               	goto	u237
  1129  07F3  0BF6               	decfsz	??_main+1,f
  1130  07F4  2FEF               	goto	u237
  1131  07F5  0000               	nop
  1132  07F6  2F63               	goto	l803
  1133  07F7  3180  2802         	ljmp	start
  1134  07F9                     __end_of_main:	
  1135                           
  1136                           	psect	text1
  1137  06B4                     __ptext1:	
  1138 ;; *************** function _SYSTEM_Initialize *****************
  1139 ;; Defined at:
  1140 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1154 ;;      Params:         0       0       0       0
  1155 ;;      Locals:         0       0       0       0
  1156 ;;      Temps:          0       0       0       0
  1157 ;;      Totals:         0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    1
  1161 ;; This function calls:
  1162 ;;		_OSCILLATOR_Initialize
  1163 ;;		_PIN_MANAGER_Initialize
  1164 ;;		_WDT_Initialize
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _SYSTEM_Initialize
  1172  06B4                     _SYSTEM_Initialize:	
  1173  06B4                     l707:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1176                           
  1177                           
  1178                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1179  06B4  3186  26BE  3186   	fcall	_PIN_MANAGER_Initialize
  1180                           
  1181                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1182  06B7  3186  26AE  3186   	fcall	_OSCILLATOR_Initialize
  1183  06BA                     l709:	
  1184                           
  1185                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  1186  06BA  3186  26AB  3186   	fcall	_WDT_Initialize
  1187  06BD                     l117:	
  1188  06BD  0008               	return
  1189  06BE                     __end_of_SYSTEM_Initialize:	
  1190                           
  1191                           	psect	text2
  1192  06AB                     __ptext2:	
  1193 ;; *************** function _WDT_Initialize *****************
  1194 ;; Defined at:
  1195 ;;		line 66 in file "mcc_generated_files/mcc.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;		None
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		status,2
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1209 ;;      Params:         0       0       0       0
  1210 ;;      Locals:         0       0       0       0
  1211 ;;      Temps:          0       0       0       0
  1212 ;;      Totals:         0       0       0       0
  1213 ;;Total ram usage:        0 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_SYSTEM_Initialize
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _WDT_Initialize
  1224  06AB                     _WDT_Initialize:	
  1225  06AB                     l705:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _WDT_Initialize: [status,2]
  1228                           
  1229                           
  1230                           ;mcc_generated_files/mcc.c: 69:     WDTCON = 0x00;
  1231  06AB  0021               	movlb	1	; select bank1
  1232  06AC  0197               	clrf	23	;volatile
  1233  06AD                     l123:	
  1234  06AD  0008               	return
  1235  06AE                     __end_of_WDT_Initialize:	
  1236                           
  1237                           	psect	text3
  1238  06BE                     __ptext3:	
  1239 ;; *************** function _PIN_MANAGER_Initialize *****************
  1240 ;; Defined at:
  1241 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1255 ;;      Params:         0       0       0       0
  1256 ;;      Locals:         0       0       0       0
  1257 ;;      Temps:          0       0       0       0
  1258 ;;      Totals:         0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_SYSTEM_Initialize
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function _PIN_MANAGER_Initialize
  1270  06BE                     _PIN_MANAGER_Initialize:	
  1271  06BE                     l681:	
  1272                           ;incstack = 0
  1273                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1274                           
  1275                           
  1276                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1277  06BE  0022               	movlb	2	; select bank2
  1278  06BF  018C               	clrf	12	;volatile
  1279                           
  1280                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1281  06C0  018D               	clrf	13	;volatile
  1282                           
  1283                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1284  06C1  018E               	clrf	14	;volatile
  1285  06C2                     l683:	
  1286                           
  1287                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  1288  06C2  303F               	movlw	63
  1289  06C3  0021               	movlb	1	; select bank1
  1290  06C4  008C               	movwf	12	;volatile
  1291  06C5                     l685:	
  1292                           
  1293                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  1294  06C5  30F0               	movlw	240
  1295  06C6  008D               	movwf	13	;volatile
  1296  06C7                     l687:	
  1297                           
  1298                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  1299  06C7  30FF               	movlw	255
  1300  06C8  008E               	movwf	14	;volatile
  1301  06C9                     l689:	
  1302                           
  1303                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x0F;
  1304  06C9  300F               	movlw	15
  1305  06CA  0023               	movlb	3	; select bank3
  1306  06CB  008E               	movwf	14	;volatile
  1307                           
  1308                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1309  06CC  018D               	clrf	13	;volatile
  1310  06CD                     l691:	
  1311                           
  1312                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  1313  06CD  3017               	movlw	23
  1314  06CE  008C               	movwf	12	;volatile
  1315  06CF                     l693:	
  1316                           
  1317                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1318  06CF  0024               	movlb	4	; select bank4
  1319  06D0  018D               	clrf	13	;volatile
  1320  06D1                     l695:	
  1321                           
  1322                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  1323  06D1  018C               	clrf	12	;volatile
  1324  06D2                     l697:	
  1325                           
  1326                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  1327  06D2  0021               	movlb	1	; select bank1
  1328  06D3  1795               	bsf	21,7	;volatile
  1329  06D4                     l699:	
  1330                           
  1331                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  1332  06D4  0022               	movlb	2	; select bank2
  1333  06D5  019D               	clrf	29	;volatile
  1334  06D6                     l152:	
  1335  06D6  0008               	return
  1336  06D7                     __end_of_PIN_MANAGER_Initialize:	
  1337                           
  1338                           	psect	text4
  1339  06AE                     __ptext4:	
  1340 ;; *************** function _OSCILLATOR_Initialize *****************
  1341 ;; Defined at:
  1342 ;;		line 58 in file "mcc_generated_files/mcc.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1356 ;;      Params:         0       0       0       0
  1357 ;;      Locals:         0       0       0       0
  1358 ;;      Temps:          0       0       0       0
  1359 ;;      Totals:         0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_SYSTEM_Initialize
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _OSCILLATOR_Initialize
  1371  06AE                     _OSCILLATOR_Initialize:	
  1372  06AE                     l701:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1375                           
  1376                           
  1377                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x7A;
  1378  06AE  307A               	movlw	122
  1379  06AF  0021               	movlb	1	; select bank1
  1380  06B0  0099               	movwf	25	;volatile
  1381  06B1                     l703:	
  1382                           
  1383                           ;mcc_generated_files/mcc.c: 63:     BORCON = 0x00;
  1384  06B1  0022               	movlb	2	; select bank2
  1385  06B2  0196               	clrf	22	;volatile
  1386  06B3                     l120:	
  1387  06B3  0008               	return
  1388  06B4                     __end_of_OSCILLATOR_Initialize:	
  1389                           
  1390                           	psect	text5
  1391  0705                     __ptext5:	
  1392 ;; *************** function _M2Drive *****************
  1393 ;; Defined at:
  1394 ;;		line 169 in file "main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1408 ;;      Params:         0       0       0       0
  1409 ;;      Locals:         0       0       0       0
  1410 ;;      Temps:          1       0       0       0
  1411 ;;      Totals:         1       0       0       0
  1412 ;;Total ram usage:        1 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _M2Drive
  1423  0705                     _M2Drive:	
  1424  0705                     l731:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _M2Drive: [wreg+status,2+status,0]
  1427                           
  1428                           
  1429                           ;main.c: 170:     PWM3DCH = 0;
  1430  0705  002C               	movlb	12	; select bank12
  1431  0706  0198               	clrf	24	;volatile
  1432                           
  1433                           ;main.c: 171:     PWM4DCH = 0;
  1434  0707  019B               	clrf	27	;volatile
  1435  0708                     l733:	
  1436                           
  1437                           ;main.c: 172:     LATCbits.LATC0 = 1;
  1438  0708  0022               	movlb	2	; select bank2
  1439  0709  140E               	bsf	14,0	;volatile
  1440  070A                     l735:	
  1441                           
  1442                           ;main.c: 173:     LATCbits.LATC2 = 1;
  1443  070A  150E               	bsf	14,2	;volatile
  1444  070B                     l737:	
  1445                           
  1446                           ;main.c: 174:     if (Motor2 > 0) {
  1447  070B  0871               	movf	_Motor2+1,w
  1448  070C  3A80               	xorlw	128
  1449  070D  00F4               	movwf	??_M2Drive
  1450  070E  3080               	movlw	128
  1451  070F  0274               	subwf	??_M2Drive,w
  1452  0710  1D03               	skipz
  1453  0711  2F14               	goto	u45
  1454  0712  3001               	movlw	1
  1455  0713  0270               	subwf	_Motor2,w
  1456  0714                     u45:	
  1457  0714  1C03               	skipc
  1458  0715  2F17               	goto	u41
  1459  0716  2F18               	goto	u40
  1460  0717                     u41:	
  1461  0717  2F1E               	goto	l743
  1462  0718                     u40:	
  1463  0718                     l739:	
  1464                           
  1465                           ;main.c: 175:         PWM3DCH = Motor2;
  1466  0718  0870               	movf	_Motor2,w
  1467  0719  002C               	movlb	12	; select bank12
  1468  071A  0098               	movwf	24	;volatile
  1469  071B                     l741:	
  1470                           
  1471                           ;main.c: 176:         LATCbits.LATC2 = 0;
  1472  071B  0022               	movlb	2	; select bank2
  1473  071C  110E               	bcf	14,2	;volatile
  1474                           
  1475                           ;main.c: 177:     } else if (Motor2 == 0) {
  1476  071D  2F32               	goto	l102
  1477  071E                     l743:	
  1478  071E  0870               	movf	_Motor2,w
  1479  071F  0471               	iorwf	_Motor2+1,w
  1480  0720  1D03               	btfss	3,2
  1481  0721  2F23               	goto	u51
  1482  0722  2F24               	goto	u50
  1483  0723                     u51:	
  1484  0723  2F28               	goto	l99
  1485  0724                     u50:	
  1486  0724                     l745:	
  1487                           
  1488                           ;main.c: 178:         LATCbits.LATC0 = 1;
  1489  0724  0022               	movlb	2	; select bank2
  1490  0725  140E               	bsf	14,0	;volatile
  1491                           
  1492                           ;main.c: 179:         LATCbits.LATC2 = 1;
  1493  0726  150E               	bsf	14,2	;volatile
  1494                           
  1495                           ;main.c: 180:     } else if (Motor2 < 0) {
  1496  0727  2F32               	goto	l102
  1497  0728                     l99:	
  1498  0728  1FF1               	btfss	_Motor2+1,7
  1499  0729  2F2B               	goto	u61
  1500  072A  2F2C               	goto	u60
  1501  072B                     u61:	
  1502  072B  2F32               	goto	l102
  1503  072C                     u60:	
  1504  072C                     l747:	
  1505                           
  1506                           ;main.c: 181:         PWM4DCH = Motor2 * -1;
  1507  072C  0370               	decf	_Motor2,w
  1508  072D  3AFF               	xorlw	255
  1509  072E  002C               	movlb	12	; select bank12
  1510  072F  009B               	movwf	27	;volatile
  1511  0730                     l749:	
  1512                           
  1513                           ;main.c: 182:         LATCbits.LATC0 = 0;
  1514  0730  0022               	movlb	2	; select bank2
  1515  0731  100E               	bcf	14,0	;volatile
  1516  0732                     l102:	
  1517  0732  0008               	return
  1518  0733                     __end_of_M2Drive:	
  1519                           
  1520                           	psect	text6
  1521  06D7                     __ptext6:	
  1522 ;; *************** function _M1Drive *****************
  1523 ;; Defined at:
  1524 ;;		line 151 in file "main.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1538 ;;      Params:         0       0       0       0
  1539 ;;      Locals:         0       0       0       0
  1540 ;;      Temps:          1       0       0       0
  1541 ;;      Totals:         1       0       0       0
  1542 ;;Total ram usage:        1 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _M1Drive
  1553  06D7                     _M1Drive:	
  1554  06D7                     l711:	
  1555                           ;incstack = 0
  1556                           ; Regs used in _M1Drive: [wreg+status,2+status,0]
  1557                           
  1558                           
  1559                           ;main.c: 152:     PWM1DCH = 0;
  1560  06D7  002C               	movlb	12	; select bank12
  1561  06D8  0192               	clrf	18	;volatile
  1562                           
  1563                           ;main.c: 153:     PWM2DCH = 0;
  1564  06D9  0195               	clrf	21	;volatile
  1565  06DA                     l713:	
  1566                           
  1567                           ;main.c: 154:     LATAbits.LATA4 = 1;
  1568  06DA  0022               	movlb	2	; select bank2
  1569  06DB  160C               	bsf	12,4	;volatile
  1570  06DC                     l715:	
  1571                           
  1572                           ;main.c: 155:     LATAbits.LATA5 = 1;
  1573  06DC  168C               	bsf	12,5	;volatile
  1574  06DD                     l717:	
  1575                           
  1576                           ;main.c: 156:     if (Motor1 > 0) {
  1577  06DD  0873               	movf	_Motor1+1,w
  1578  06DE  3A80               	xorlw	128
  1579  06DF  00F4               	movwf	??_M1Drive
  1580  06E0  3080               	movlw	128
  1581  06E1  0274               	subwf	??_M1Drive,w
  1582  06E2  1D03               	skipz
  1583  06E3  2EE6               	goto	u15
  1584  06E4  3001               	movlw	1
  1585  06E5  0272               	subwf	_Motor1,w
  1586  06E6                     u15:	
  1587  06E6  1C03               	skipc
  1588  06E7  2EE9               	goto	u11
  1589  06E8  2EEA               	goto	u10
  1590  06E9                     u11:	
  1591  06E9  2EF0               	goto	l723
  1592  06EA                     u10:	
  1593  06EA                     l719:	
  1594                           
  1595                           ;main.c: 157:         PWM1DCH = Motor1;
  1596  06EA  0872               	movf	_Motor1,w
  1597  06EB  002C               	movlb	12	; select bank12
  1598  06EC  0092               	movwf	18	;volatile
  1599  06ED                     l721:	
  1600                           
  1601                           ;main.c: 158:         LATAbits.LATA4 = 0;
  1602  06ED  0022               	movlb	2	; select bank2
  1603  06EE  120C               	bcf	12,4	;volatile
  1604                           
  1605                           ;main.c: 159:     } else if (Motor1 == 0) {
  1606  06EF  2F04               	goto	l94
  1607  06F0                     l723:	
  1608  06F0  0872               	movf	_Motor1,w
  1609  06F1  0473               	iorwf	_Motor1+1,w
  1610  06F2  1D03               	btfss	3,2
  1611  06F3  2EF5               	goto	u21
  1612  06F4  2EF6               	goto	u20
  1613  06F5                     u21:	
  1614  06F5  2EFA               	goto	l91
  1615  06F6                     u20:	
  1616  06F6                     l725:	
  1617                           
  1618                           ;main.c: 160:         LATAbits.LATA4 = 1;
  1619  06F6  0022               	movlb	2	; select bank2
  1620  06F7  160C               	bsf	12,4	;volatile
  1621                           
  1622                           ;main.c: 161:         LATAbits.LATA5 = 1;
  1623  06F8  168C               	bsf	12,5	;volatile
  1624                           
  1625                           ;main.c: 162:     } else if (Motor1 < 0) {
  1626  06F9  2F04               	goto	l94
  1627  06FA                     l91:	
  1628  06FA  1FF3               	btfss	_Motor1+1,7
  1629  06FB  2EFD               	goto	u31
  1630  06FC  2EFE               	goto	u30
  1631  06FD                     u31:	
  1632  06FD  2F04               	goto	l94
  1633  06FE                     u30:	
  1634  06FE                     l727:	
  1635                           
  1636                           ;main.c: 163:         PWM2DCH = Motor1 * -1;
  1637  06FE  0372               	decf	_Motor1,w
  1638  06FF  3AFF               	xorlw	255
  1639  0700  002C               	movlb	12	; select bank12
  1640  0701  0095               	movwf	21	;volatile
  1641  0702                     l729:	
  1642                           
  1643                           ;main.c: 164:         LATAbits.LATA5 = 0;
  1644  0702  0022               	movlb	2	; select bank2
  1645  0703  128C               	bcf	12,5	;volatile
  1646  0704                     l94:	
  1647  0704  0008               	return
  1648  0705                     __end_of_M1Drive:	
  1649  007E                     btemp	set	126	;btemp
  1650  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_M1Drive
    _main->_M2Drive

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMMON     2     2      0
                            _M1Drive
                            _M2Drive
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _M2Drive                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _M1Drive                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _M1Drive
   _M2Drive
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       7       2       50.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       7      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 13:17:45 2020

                    __CFG_CP$OFF 0000                               l91 06FA                               l94 0704  
                             l99 0728                               u10 06EA                               u11 06E9  
                             u20 06F6                               u21 06F5                               u30 06FE  
                             u31 06FD                               u15 06E6                               u40 0718  
                             u41 0717                               u50 0724                               u51 0723  
                             u60 072C                               u61 072B                               u45 0714  
                             u70 0768                               u71 0767                               u80 0775  
                             u81 0774                               u90 077E                               u91 077D  
                             u85 0771                              l102 0732                              l120 06B3  
                            l123 06AD                              l117 06BD                              l152 06D6  
                            l701 06AE                              l711 06D7                              l703 06B1  
                            l721 06ED                              l713 06DA                              l705 06AB  
                            l801 0761                              l723 06F0                              l715 06DC  
                            l731 0705                              l707 06B4                              l811 077E  
                            l803 0763                              l725 06F6                              l717 06DD  
                            l741 071B                              l733 0708                              l709 06BA  
                            l821 079A                              l813 078B                              l805 0768  
                            l727 06FE                              l719 06EA                              l743 071E  
                            l735 070A                              l831 07B5                              l823 079E  
                            l815 078F                              l807 0775                              l751 0733  
                            l729 0702                              l745 0724                              l737 070B  
                            l681 06BE                              l841 07D4                              l833 07B9  
                            l825 07A2                              l817 0794                              l809 0779  
                            l761 0740                              l753 0736                              l747 072C  
                            l739 0718                              l691 06CD                              l683 06C2  
                            l851 07E4                              l843 07D8                              l835 07BE  
                            l827 07A4                              l819 0798                              l771 0749  
                            l763 0741                              l755 0739                              l749 0730  
                            l693 06CF                              l685 06C5                              l853 07E7  
                            l845 07DA                              l837 07CB                              l829 07A8  
                            l781 0753                              l773 074C                              l765 0742  
                            l757 073C                              l695 06D1                              l687 06C7  
                            l855 07EA                              l847 07DE                              l839 07CF  
                            l791 075A                              l783 0755                              l775 074E  
                            l767 0745                              l759 073E                              l697 06D2  
                            l689 06C9                              l849 07E2                              l793 075B  
                            l785 0756                              l777 0751                              l769 0747  
                            l699 06D4                              l795 075D                              l787 0757  
                            l779 0752                              l797 075E                              l789 0759  
                            l799 075F                              u100 078B                              u101 078A  
                            u110 0794                              u111 0793                              u200 07D8  
                            u120 0798                              u201 07D7                              u121 0797  
                            u105 0787                              u210 07DE                              u130 079E  
                            u211 07DD                              u131 079D                              u220 07E2  
                            u140 07A2                              u221 07E1                              u141 07A1  
                            u150 07A8                              u151 07A7                              u160 07B5  
                            u161 07B4                              u170 07BE                              u171 07BD  
                            u180 07CB                              u237 07EF                              u181 07CA  
                            u165 07B1                              u190 07D4                              _PR2 001B  
                            u191 07D3                              u185 07C7                     __CFG_BORV$LO 0000  
                            wreg 0009                     __CFG_IESO$ON 0000                  __end_of_M1Drive 0705  
                __end_of_M2Drive 0733                     __CFG_LVP$OFF 0000                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _WPUA 020C  
                           _WPUB 020D                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _main 0733                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 0002                    __CFG_MCLRE$ON 0000   __size_of_OSCILLATOR_Initialize 0006  
  __end_of_OSCILLATOR_Initialize 06B4                            ?_main 0074                    __CFG_WDTE$OFF 0000  
                          _T2CON 001C                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E                   _WDT_Initialize 06AB                            status 0003  
                          wtemp0 007E                  __initialization 07F9                     __end_of_main 07F9  
                 __CFG_LPBOR$OFF 0000                           ??_main 0075                        ??_M1Drive 0074  
                      ??_M2Drive 0074           __end_of_WDT_Initialize 06AE                           _APFCON 011D  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
                         _BORCON 0116                           _OSCCON 0099                           _WDTCON 0097  
                 __CFG_PWRTE$OFF 0000                           _Motor1 0072                           _Motor2 0070  
                 __CFG_STVREN$ON 0000                  ?_WDT_Initialize 0074                _SYSTEM_Initialize 06B4  
        __end_of__initialization 07FD               ?_SYSTEM_Initialize 0074                   __pcstackCOMMON 0074  
            ??_SYSTEM_Initialize 0074                   _OPTION_REGbits 0095        __end_of_SYSTEM_Initialize 06BE  
                     __pmaintext 0733                          _M1Drive 06D7                          _M2Drive 0705  
                        _PWM1DCH 0612                          _PWM1DCL 0611                          _PWM2DCH 0615  
                        _PWM2DCL 0614                          _PWM3DCH 0618                          _PWM3DCL 0617  
                        _PWM4DCH 061B                          _PWM1CON 0613                          _PWM4DCL 061A  
                        _PWM2CON 0616                          _PWM3CON 0619                          _PWM4CON 061C  
                        __ptext1 06B4                          __ptext2 06AB                          __ptext3 06BE  
                        __ptext4 06AE                          __ptext5 0705                          __ptext6 06D7  
          _OSCILLATOR_Initialize 06AE         ??_PIN_MANAGER_Initialize 0074       __size_of_SYSTEM_Initialize 000A  
           end_of_initialization 07FD                 ??_WDT_Initialize 0074                        _PORTBbits 000D  
                      _PORTCbits 000E                 __CFG_FOSC$INTOSC 0000           ?_OSCILLATOR_Initialize 0074  
            start_initialization 07F9  __size_of_PIN_MANAGER_Initialize 0019                         ?_M1Drive 0074  
                       ?_M2Drive 0074                      __pbssCOMMON 0070                        ___latbits 0001  
         _PIN_MANAGER_Initialize 06BE                         _LATAbits 010C                         _LATCbits 010E  
               __size_of_M1Drive 002E                 __size_of_M2Drive 002E          ??_OSCILLATOR_Initialize 0074  
                  __size_of_main 00C6          __size_of_WDT_Initialize 0003          ?_PIN_MANAGER_Initialize 0074  
              __CFG_CLKOUTEN$OFF 0000                       _OSCCONbits 0099   __end_of_PIN_MANAGER_Initialize 06D7  
